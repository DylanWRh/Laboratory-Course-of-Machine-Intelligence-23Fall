// set the vehicle parameters
setupVehicle()
{
    llSetStatus(STATUS_PHYSICS, TRUE);
    llSetVehicleType(VEHICLE_TYPE_CAR);
    
    // The vehicle will get up to full speed in 1 second 
    // and decay after 4
    llSetVehicleFloatParam(VEHICLE_LINEAR_MOTOR_TIMESCALE, 1.0);
    llSetVehicleFloatParam(VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE, 4.0);
    
    // The angular motor will start almost instantly and decay
    // quickly
    llSetVehicleFloatParam(VEHICLE_ANGULAR_MOTOR_TIMESCALE, 0.1);
    llSetVehicleFloatParam(VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE,
        0.75);

    // no angular deflection, some linear deflection
    llSetVehicleFloatParam(VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY, 0.0);
    llSetVehicleFloatParam(VEHICLE_LINEAR_DEFLECTION_EFFICIENCY, 0.5); 

    // very little friction in x, lots in y and z
    llSetVehicleVectorParam(VEHICLE_LINEAR_FRICTION_TIMESCALE, 
        <10.0, 2.0, 1.0>); 
    
    // moderate angular friction 
    llSetVehicleFloatParam(VEHICLE_ANGULAR_FRICTION_TIMESCALE, 4.0);      
    
    // very strong quick vertical attractor
    llSetVehicleFloatParam(
        VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY, 0.95);
    llSetVehicleFloatParam(
        VEHICLE_VERTICAL_ATTRACTION_TIMESCALE, 0.75);  
    
    // strong banking
    llSetVehicleFloatParam(VEHICLE_BANKING_TIMESCALE, 1.0);
    llSetVehicleFloatParam(VEHICLE_BANKING_EFFICIENCY, 0.5);
    llSetVehicleFloatParam(VEHICLE_BANKING_MIX, 0.5);
    
}

// stop this object from being a vehicle
noVehicle()
{
    // Turn off physics and vehicle params
    llSetVehicleType(VEHICLE_TYPE_NONE);
    llSetStatus(STATUS_PHYSICS, FALSE);
    llSetRot(ZERO_ROTATION);
}

// give this prim an upside-down wedge shape 
// and set it to about avatar size
setupObject()
{
    llSetPrimitiveParams([
    PRIM_TYPE, 
        PRIM_TYPE_BOX,
        PRIM_HOLE_DEFAULT,
        <0.0, 1.0, 0.0>,
        0.0,
        <0.0, 0.0, 0.0>,
        <1.25, 2.0, 0.0>,
        <0.0, 0.0, 0.0>,
    PRIM_SIZE,
        <2.5, 0.5, 1>
        ]);
}


// default state, not a vehicle
default
{
    state_entry()
    {
        noVehicle();
        setupObject();
                
        // Set the location avatars will sit
        llSitTarget(<-1.0, 0.0, 0.5>, ZERO_ROTATION);
        
        // set the camera position and orientation
        llSetCameraEyeOffset(<-4.5, 0.0, 1.75>);
        llSetCameraAtOffset(<1.0, 0.0, 1.75>);
        
    }
    
    changed(integer change)
    {
        if (change & CHANGED_LINK)
        {
            if (llAvatarOnSitTarget() != NULL_KEY)
            {
                // someone is sitting on the object, request permission
                // to take controls
                llRequestPermissions(
                    llAvatarOnSitTarget(),
                    PERMISSION_TAKE_CONTROLS); 
            }
        }
    }
    
    run_time_permissions(integer perm)
    {
        // the run time permissions have changed; if script can 
        // take controls, do that and go to the vehicle state
        if (perm & PERMISSION_TAKE_CONTROLS)
        {
            llTakeControls(
                CONTROL_FWD | CONTROL_BACK |
                CONTROL_ROT_LEFT | CONTROL_ROT_RIGHT,
                TRUE, FALSE);
            state vehicle;
        }
    }
}

state vehicle
{
    state_entry()
    {
        setupVehicle();
    }
        
    changed(integer change)
    {
        // If the avatar sitting on this object gets up, stop 
        // being a vehicle
        if (change & CHANGED_LINK)
        {
            if (llAvatarOnSitTarget() == NULL_KEY)
            {
                // no one is sitting on the object, stop 
                // being a vehicle
                llReleaseControls();
                state default;
            }
        }
    }
    
    control(key from, integer level, integer edge)
    {
        vector velocity = ZERO_VECTOR;
        float speed = 20.0;
        
        vector turn = ZERO_VECTOR;
        float turnSpeed = TWO_PI;
        
        if (level & CONTROL_FWD)
        {
            velocity = <1.0, 0.0, 0.0>;
        }
        else if (level & CONTROL_BACK)
        {
            velocity = <-0.3, 0.0, 0.0>;
        } 
        if (velocity != ZERO_VECTOR)
        {
            velocity = velocity * speed;
            llSetVehicleVectorParam(
                            VEHICLE_LINEAR_MOTOR_DIRECTION, velocity);
        } 
        
        // to turn, at a lot of roll and a little rotation
        if (level & CONTROL_ROT_LEFT)
        {
            turn = <-1.0, 0.0, 0.25>;
        }
        else if (level & CONTROL_ROT_RIGHT)
        {
            turn = <1.0, 0.0, -0.25>;
        }
        if (turn != ZERO_VECTOR)
        {
            turn = turn * turnSpeed;
            llSetVehicleVectorParam(
               VEHICLE_ANGULAR_MOTOR_DIRECTION, turn);
        }
    }
}