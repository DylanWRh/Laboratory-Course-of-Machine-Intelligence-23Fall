From: <¨®¨¦ Windows Internet Explorer 7 ¡À¡ê¡ä?>
Subject: Linden Scripting Language Reference
Date: Sat, 25 Oct 2008 13:49:27 +0800
MIME-Version: 1.0
Content-Type: text/html;
	charset="Windows-1252"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://oz.slinked.net/history/lsl2_reference.htm
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3350

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Linden Scripting Language Reference</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dwindows-1252">
<META content=3D"MSHTML 6.00.6000.16705" name=3DGENERATOR>
<STYLE>@font-face {
	font-family: Helvetica;
}
@font-face {
	font-family: Courier;
}
@font-face {
	font-family: Tms Rmn;
}
@font-face {
	font-family: Helv;
}
@font-face {
	font-family: New York;
}
@font-face {
	font-family: System;
}
@font-face {
	font-family: Wingdings;
}
@font-face {
	font-family: MS Mincho;
}
@font-face {
	font-family: Batang;
}
@font-face {
	font-family: SimSun;
}
@font-face {
	font-family: PMingLiU;
}
@font-face {
	font-family: MS Gothic;
}
@font-face {
	font-family: Dotum;
}
@font-face {
	font-family: SimHei;
}
@font-face {
	font-family: MingLiU;
}
@font-face {
	font-family: Mincho;
}
@font-face {
	font-family: Gulim;
}
@font-face {
	font-family: Century;
}
@font-face {
	font-family: Angsana New;
}
@font-face {
	font-family: Cordia New;
}
@font-face {
	font-family: Mangal;
}
@font-face {
	font-family: Latha;
}
@font-face {
	font-family: Sylfaen;
}
@font-face {
	font-family: Vrinda;
}
@font-face {
	font-family: Raavi;
}
@font-face {
	font-family: Shruti;
}
@font-face {
	font-family: Sendnya;
}
@font-face {
	font-family: Gautami;
}
@font-face {
	font-family: Tunga;
}
@font-face {
	font-family: Estrangella Edessa;
}
@font-face {
	font-family: Arial Unicode MS;
}
@font-face {
	font-family: Tahoma;
}
@font-face {
	font-family: Albany;
}
@font-face {
	font-family: HG Mincho Light J;
}
@page Section1 {size: 8.5in 11.0in; margin: 1.0in 1.25in 86.9pt 1.25in; =
}
@page Section2 {size: 8.5in 11.0in; margin: 1.0in 1.25in 86.9pt 1.25in; =
}
@page Section3 {size: 8.5in 11.0in; margin: 1.0in 1.25in 86.9pt 1.25in; =
}
P.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
LI.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
DIV.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
H1 {
	FONT-SIZE: 18pt; MARGIN: 12pt 0in 3pt; TEXT-INDENT: 0in; FONT-FAMILY: =
Arial
}
H2 {
	FONT-SIZE: 16pt; MARGIN: 12pt 0in 3pt; TEXT-INDENT: 0in; FONT-FAMILY: =
Arial
}
H3 {
	FONT-SIZE: 14pt; MARGIN: 12pt 0in 3pt; TEXT-INDENT: 0in; FONT-FAMILY: =
Arial
}
H4 {
	FONT-SIZE: 12pt; MARGIN: 12pt 0in 3pt; TEXT-INDENT: 0in; FONT-FAMILY: =
Arial
}
P.MsoIndex1 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 12pt; TEXT-INDENT: -12pt; =
FONT-FAMILY: Arial
}
LI.MsoIndex1 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 12pt; TEXT-INDENT: -12pt; =
FONT-FAMILY: Arial
}
DIV.MsoIndex1 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 12pt; TEXT-INDENT: -12pt; =
FONT-FAMILY: Arial
}
P.MsoToc1 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
LI.MsoToc1 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
DIV.MsoToc1 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
P.MsoToc2 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 12pt; TEXT-INDENT: 0.05pt; =
FONT-FAMILY: Arial
}
LI.MsoToc2 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 12pt; TEXT-INDENT: 0.05pt; =
FONT-FAMILY: Arial
}
DIV.MsoToc2 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 12pt; TEXT-INDENT: 0.05pt; =
FONT-FAMILY: Arial
}
P.MsoToc3 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 24pt; TEXT-INDENT: 0.05pt; =
FONT-FAMILY: Arial
}
LI.MsoToc3 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 24pt; TEXT-INDENT: 0.05pt; =
FONT-FAMILY: Arial
}
DIV.MsoToc3 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 24pt; TEXT-INDENT: 0.05pt; =
FONT-FAMILY: Arial
}
P.MsoToc4 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 0.5in; FONT-FAMILY: Arial
}
LI.MsoToc4 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 0.5in; FONT-FAMILY: Arial
}
DIV.MsoToc4 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 0.5in; FONT-FAMILY: Arial
}
P.MsoToc5 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 48pt; FONT-FAMILY: "Times New =
Roman"
}
LI.MsoToc5 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 48pt; FONT-FAMILY: "Times New =
Roman"
}
DIV.MsoToc5 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 48pt; FONT-FAMILY: "Times New =
Roman"
}
P.MsoToc6 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 60pt; FONT-FAMILY: "Times New =
Roman"
}
LI.MsoToc6 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 60pt; FONT-FAMILY: "Times New =
Roman"
}
DIV.MsoToc6 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 60pt; FONT-FAMILY: "Times New =
Roman"
}
P.MsoToc7 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 1in; FONT-FAMILY: "Times New =
Roman"
}
LI.MsoToc7 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 1in; FONT-FAMILY: "Times New =
Roman"
}
DIV.MsoToc7 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 1in; FONT-FAMILY: "Times New =
Roman"
}
P.MsoToc8 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 84pt; FONT-FAMILY: "Times New =
Roman"
}
LI.MsoToc8 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 84pt; FONT-FAMILY: "Times New =
Roman"
}
DIV.MsoToc8 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 84pt; FONT-FAMILY: "Times New =
Roman"
}
P.MsoToc9 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 96pt; FONT-FAMILY: "Times New =
Roman"
}
LI.MsoToc9 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 96pt; FONT-FAMILY: "Times New =
Roman"
}
DIV.MsoToc9 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt 96pt; FONT-FAMILY: "Times New =
Roman"
}
P.MsoHeader {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
LI.MsoHeader {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
DIV.MsoHeader {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
P.MsoFooter {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
LI.MsoFooter {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
DIV.MsoFooter {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
P.MsoBodyText {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-FAMILY: Arial
}
LI.MsoBodyText {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-FAMILY: Arial
}
DIV.MsoBodyText {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-FAMILY: Arial
}
A:link {
	COLOR: blue; TEXT-DECORATION: underline
}
SPAN.MsoHyperlink {
	COLOR: blue; TEXT-DECORATION: underline
}
A:visited {
	COLOR: purple; TEXT-DECORATION: underline
}
SPAN.MsoHyperlinkFollowed {
	COLOR: purple; TEXT-DECORATION: underline
}
SPAN.WW8Num1z0 {
	FONT-FAMILY: Symbol
}
SPAN.WW8Num1z1 {
	FONT-FAMILY: "Courier New"
}
SPAN.WW8Num1z2 {
	FONT-FAMILY: Wingdings
}
SPAN.WW8Num2z0 {
	FONT-FAMILY: Symbol
}
SPAN.WW8Num3z0 {
	FONT-FAMILY: Symbol
}
SPAN.WW8Num3z1 {
	FONT-FAMILY: "Courier New"
}
SPAN.WW8Num3z2 {
	FONT-FAMILY: Wingdings
}
SPAN.WW8Num4z0 {
	FONT-FAMILY: Symbol
}
SPAN.WW8Num4z1 {
	FONT-FAMILY: "Courier New"
}
SPAN.WW8Num4z2 {
	FONT-FAMILY: Wingdings
}
SPAN.WW8Num5z0 {
	FONT-FAMILY: Symbol
}
SPAN.WW8Num5z1 {
	FONT-FAMILY: "Courier New"
}
SPAN.WW8Num5z2 {
	FONT-FAMILY: Wingdings
}
P.Heading {
	FONT-SIZE: 14pt; MARGIN: 12pt 0in 6pt; FONT-FAMILY: Albany
}
LI.Heading {
	FONT-SIZE: 14pt; MARGIN: 12pt 0in 6pt; FONT-FAMILY: Albany
}
DIV.Heading {
	FONT-SIZE: 14pt; MARGIN: 12pt 0in 6pt; FONT-FAMILY: Albany
}
P.Heading0 {
	FONT-WEIGHT: bold; FONT-SIZE: 20pt; MARGIN: 12pt 0in 3pt; TEXT-INDENT: =
0in; FONT-FAMILY: Arial
}
LI.Heading0 {
	FONT-WEIGHT: bold; FONT-SIZE: 20pt; MARGIN: 12pt 0in 3pt; TEXT-INDENT: =
0in; FONT-FAMILY: Arial
}
DIV.Heading0 {
	FONT-WEIGHT: bold; FONT-SIZE: 20pt; MARGIN: 12pt 0in 3pt; TEXT-INDENT: =
0in; FONT-FAMILY: Arial
}
P.Index {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
LI.Index {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
DIV.Index {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: Arial
}
P.TableContents {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-FAMILY: Arial
}
LI.TableContents {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-FAMILY: Arial
}
DIV.TableContents {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-FAMILY: Arial
}
P.TableHeading {
	FONT-WEIGHT: bold; FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-STYLE: =
italic; FONT-FAMILY: Arial; TEXT-ALIGN: center
}
LI.TableHeading {
	FONT-WEIGHT: bold; FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-STYLE: =
italic; FONT-FAMILY: Arial; TEXT-ALIGN: center
}
DIV.TableHeading {
	FONT-WEIGHT: bold; FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-STYLE: =
italic; FONT-FAMILY: Arial; TEXT-ALIGN: center
}
INS {
	TEXT-DECORATION: none
}
SPAN.msoIns {
	TEXT-DECORATION: underline
}
SPAN.msoDel {
	COLOR: red; TEXT-DECORATION: line-through
}
DIV.Section1 {
	page: Section1
}
DIV.Section2 {
	page: Section2
}
DIV.Section3 {
	page: Section3
}
OL {
	MARGIN-BOTTOM: 0in
}
UL {
	MARGIN-BOTTOM: 0in
}
</STYLE>
</HEAD>
<BODY lang=3DEN-US vLink=3Dpurple link=3Dblue>
<P class=3DMsoNormal><B><SPAN style=3D"FONT-SIZE: 16pt">What is=20
this?</SPAN></B></P>The below is a document that was included with the =
Second=20
Life client and is kept here for historical documentation. For a more =
accurate=20
and updated LSL reference see <A=20
href=3D"http://lslwiki.net/">http://lslwiki.net/</A>.=20
<DIV class=3DSection1>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal><B><SPAN style=3D"FONT-SIZE: =
20pt">Linden</SPAN></B><B><SPAN=20
style=3D"FONT-SIZE: 20pt"> Scripting Language =
Reference</SPAN></B></P><SPAN=20
style=3D"FONT-SIZE: 12pt; FONT-FAMILY: Arial"><BR=20
style=3D"PAGE-BREAK-BEFORE: always" clear=3Dall></SPAN>
<P class=3DMsoNormal><B><SPAN style=3D"FONT-SIZE: 16pt">Table of=20
Contents</SPAN></B></P>
<P class=3DMsoToc1><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275540">In=
troduction<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">9</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275541">Ov=
erview<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">.. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">9</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275542">De=
sign=20
Goals of LSL<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">9</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275543">De=
scription<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">9</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275544">Ex=
ample =96=20
door.lsl<SPAN style=3D"DISPLAY: none; COLOR: windowtext; =
TEXT-DECORATION: none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">10</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc1><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275545">Us=
er=92s=20
Manual<SPAN style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">12</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275546">Ov=
erview<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">.. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">12</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275547">Pr=
ogram=20
Structure<SPAN style=3D"DISPLAY: none; COLOR: windowtext; =
TEXT-DECORATION: none">.=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">12</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275548">Va=
riables<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">13</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275549">St=
ates and=20
Event Handlers<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">13</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275550">Co=
mments<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">14</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275551">Ty=
pes<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">14</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275552">Ar=
ithmetic=20
Operations<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">15</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275553">Ty=
pe=20
Conversion<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">16</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275554">Im=
plicit=20
Type Casting<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">16</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275555">Ex=
plicit=20
Type Casting<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">16</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275556">Lo=
op=20
Constructs<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">16</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275557">fo=
r<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">16</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275558">do=
-while<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">17</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275559">wh=
ile<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">17</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275560">Co=
nditional=20
Statements<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">17</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275561">if=
<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">17</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275562">if=
-else<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">17</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275563">Ju=
mps<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">18</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc1><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275564">Ex=
ample=20
Code<SPAN style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">.=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">18</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275565">Ne=
w=20
Firework Script<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">18</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275566">Ga=
mbling=20
Script<SPAN style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">19</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275567">Th=
e Cannon=20
Scripts<SPAN style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">.=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">20</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc1><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275568">Re=
ference=20
Manual<SPAN style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">22</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275569">Ev=
ents<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">22</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275570">st=
ate_entry()<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">23</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275571">st=
ate_exit()<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">23</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275572">to=
uch_start(integer=20
total_number)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">23</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275573">to=
uch(integer=20
total_number)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">23</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275574">to=
uch_end(integer=20
total_number)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">23</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275575">co=
llision_start(integer=20
total_number)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">23</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275576">co=
llision(integer=20
total_number)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">23</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275577">co=
llision_end(integer=20
total_number)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">23</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275578">la=
nd_collision_start(vector=20
position)<SPAN style=3D"DISPLAY: none; COLOR: windowtext; =
TEXT-DECORATION: none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">24</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275579">la=
nd_collision(vector=20
position)<SPAN style=3D"DISPLAY: none; COLOR: windowtext; =
TEXT-DECORATION: none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">24</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275580">la=
nd_collision_end(vector=20
position)<SPAN style=3D"DISPLAY: none; COLOR: windowtext; =
TEXT-DECORATION: none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">24</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275581">ti=
mer()<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">24</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275582">li=
sten(integer=20
channel, string name, key id, string message)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">24</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275583">se=
nsor(integer=20
total_number)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">24</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275584">no=
_sensor()<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">24</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275585">co=
ntrol(key=20
name, integer levels, integer edges)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">24</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275586">at=
_target(integer=20
number, vector targetpos, vector ourpos)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">24</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275587">no=
t_at_target()<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">25</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275588">at=
_rot_target(integer=20
number, rotation targetrot, rotation ourrot)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">25</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275589">no=
t_at_rot_target()<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">25</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275590">mo=
ney(key=20
giver, integer amount)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">25</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275591">em=
ail(string=20
time, string address, string subject, string body, integer =
remaining)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">25</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275592">ru=
n_time_permissions(integer=20
permissions)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">25</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275593">ch=
anged(integer=20
changed)<SPAN style=3D"DISPLAY: none; COLOR: windowtext; =
TEXT-DECORATION: none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">25</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275594">at=
tach(key=20
attached)<SPAN style=3D"DISPLAY: none; COLOR: windowtext; =
TEXT-DECORATION: none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">25</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275595">mo=
ving_start()<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">25</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275596">mo=
ving_end()<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">26</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275597">on=
_rez(integer=20
start_param)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">26</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275598">li=
nk_message(integer=20
sender_num, integer num, string str, key id)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">26</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275599">ob=
ject_rez(key=20
id)<SPAN style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">26</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275600">da=
taserver(key=20
requested, string data)<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">26</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275601">Ar=
ithmetic=20
Operations<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">26</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275602">As=
signment=20
and Comparison<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">26</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275603">In=
teger=20
Arithmetic<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">26</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275604">In=
teger=20
Constants<SPAN style=3D"DISPLAY: none; COLOR: windowtext; =
TEXT-DECORATION: none">.=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">26</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275605">Fl=
oat=20
Arithmetic<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">28</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275606">Fl=
oating=20
Point Constants<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">29</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275607">Ve=
ctor=20
Arithmetic<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">29</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275608">Ro=
tation=20
Arithmetic<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">29</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275609">St=
ring=20
Arithmetic<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">29</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275610">Ke=
y=20
Constant<SPAN style=3D"DISPLAY: none; COLOR: windowtext; =
TEXT-DECORATION: none">=20
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">29</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275611">Li=
brary=20
Function Calls<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">29</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275612">ll=
Sin<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">29</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275613">ll=
Cos<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">29</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275614">ll=
Tan<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">29</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275615">ll=
Atan2<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">30</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275616">ll=
Sqrt<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">30</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none"></SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275617">ll=
Pow<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">.. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">30</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275618">ll=
Abs<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">30</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275619">ll=
Fabs<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">30</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275620">ll=
Frand<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">30</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275621">ll=
Floor<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">30</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275622">ll=
Ceil<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">30</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275623">ll=
Round<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">31</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275624">ll=
VecMag<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">31</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275625">ll=
VecNorm<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">.. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">31</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275626">ll=
VecDist<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">31</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275627">ll=
Rot2Euler<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">31</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275628">ll=
Euler2Rot<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">31</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275629">ll=
Axes2Rot<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">31</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275630">ll=
Rot2Fwd<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">31</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275631">ll=
Rot2Left<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">31</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275632">ll=
Rot2Up<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">32</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275633">ll=
RotBetween<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">32</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275634">ll=
Whisper<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">32</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275635">ll=
Say<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">32</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275636">ll=
Shout<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">32</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275637">ll=
Listen<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">32</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275638">ll=
ListenControl<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">33</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275639">ll=
ListenRemove<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">33</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275640">ll=
Sensor<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">33</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275641">ll=
SensorRepeat<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">33</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275642">ll=
SensorRemove<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">33</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275643">ll=
DetectedName<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">33</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275644">ll=
DetectedKey<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">33</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275645">ll=
DetectedOwner<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">34</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275646">ll=
DetectedPos<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">34</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275647">ll=
DetectedVel<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">34</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275648">ll=
DetectedGrab<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">34</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275649">ll=
DetectedRot<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">34</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275650">ll=
DetectedLinkNumber<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">35</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275651">ll=
Die<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">35</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275652">ll=
Ground<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">35</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275653">ll=
Cloud<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">35</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275654">ll=
Wind<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">35</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275655">ll=
SetStatus<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">35</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275656">ll=
GetStatus<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">35</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275657">ll=
SetScale<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">35</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275658">ll=
GetScale<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">36</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275659">ll=
SetColor<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">36</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275660">ll=
GetColor<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">36</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275661">ll=
SetAlpha<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">36</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275662">ll=
GetAlpha<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">36</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275663">ll=
SetTexture<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">36</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275664">ll=
GetTexture<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">36</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275665">ll=
ScaleTexture<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">36</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275666">ll=
OffsetTexture<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">37</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275667">ll=
RotateTexture<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">37</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275668">ll=
SetTextureAnim<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">.. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">37</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275669">ll=
SetPos<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">38</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275670">ll=
GetPos<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">38</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275671">ll=
GetLocalPos<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">38</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275672">ll=
SetRot<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">38</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275673">ll=
GetRot<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">38</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275674">ll=
GetLocalRot<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">38</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275675">ll=
SetText<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">38</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275676">ll=
SetForce<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">39</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275677">ll=
GetForce<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">39</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275678">ll=
Target<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">39</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275679">ll=
TargetRemove<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">39</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275680">ll=
RotTarget<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">39</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275681">ll=
RotTargetRemove<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">39</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275682">ll=
MoveToTarget<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">39</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275683">ll=
StopMoveToTarget<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">39</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275684">ll=
ApplyImpulse<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">40</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275685">ll=
ApplyRotationalImpulse<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">40</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275686">ll=
SetTorque<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">40</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275687">ll=
GetTorque<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">40</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275688">ll=
SetForceAndTorque<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">40</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275689">ll=
GetVel<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">40</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275690">ll=
GetAccel<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">40</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275691">ll=
GetOmega<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">40</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275692">ll=
GetTimeOfDay<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">41</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275693">ll=
GetWallclock<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">41</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275694">ll=
GetTime<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">41</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275695">ll=
ResetTime<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">41</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275696">ll=
GetAndResetTime<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">41</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275697">ll=
PlaySound<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">41</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275698">ll=
LoopSound<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">41</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275699">ll=
TriggerSound<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">42</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275700">ll=
TriggerSoundLimited<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">42</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275701">ll=
StopSound<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">42</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275702">ll=
PreloadSound<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">42</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275703">ll=
AdjustSoundVolume<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">42</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275704">ll=
SetSoundQueueing<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">43</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275705">ll=
LoopSoundMaster<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">43</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275706">ll=
LoopSoundSlave<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">43</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275707">ll=
PlaySoundSlave<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">43</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275708">ll=
GetSubString<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">43</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275709">ll=
DeleteSubString<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">44</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275710">ll=
InsertString<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">44</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275711">ll=
ToUpper<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">44</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275712">ll=
ToLower<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">44</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275713">ll=
StringLength<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">44</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275714">ll=
GiveMoney<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">44</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275715">ll=
MakeExplosion<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">45</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275716">ll=
MakeFountain<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">45</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275717">ll=
MakeSmoke<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">45</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275718">ll=
MakeFire<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">45</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275719">ll=
RezObject<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">45</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275720">ll=
SetTimerEvent<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">45</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275721">ll=
Sleep<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">45</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275722">ll=
LookAt<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">45</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275723">ll=
RotLookAt<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">46</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275724">ll=
StopLookAt<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">46</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275725">ll=
CollisionFilter<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">46</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275726">ll=
TakeControls<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">46</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275727">ll=
ReleaseControls<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">46</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275728">ll=
AttachToAvatar<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">46</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275729">ll=
DetachFromAvatar<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">46</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275730">ll=
GetOwner<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">47</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275731">ll=
InstantMessage<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">47</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275732">ll=
Email<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">47</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275733">ll=
GetNextEmail<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">47</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275734">ll=
GetKey<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">47</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275735">ll=
SetBuoyancy<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">47</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275736">ll=
SetHoverHeight<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">47</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275737">ll=
StopHover<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">47</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275738">ll=
MinEventDelay<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">48</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275739">ll=
StartAnimation<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">48</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275740">ll=
StopAnimation<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">50</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275741">ll=
PointAt<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">50</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275742">ll=
StopPointAt<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">50</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275743">ll=
TargetOmega<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">51</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275744">ll=
GetStartParameter<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">51</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275745">ll=
RequestPermissions<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">51</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275746">ll=
GetPermissionsKey<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">51</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275747">ll=
GetPermissions<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">51</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275748">ll=
GetLinkNumber<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">51</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275749">ll=
SetLinkColor<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">51</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275750">ll=
CreateLink<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">52</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275751">ll=
BreakLink<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">52</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275752">ll=
BreakAllLinks<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">52</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275753">ll=
GetLinkKey<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">52</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275754">ll=
GetLinkName<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">52</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275755">ll=
GetInventoryNumber<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">52</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275756">ll=
GetInventoryName<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">52</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275757">ll=
GiveInventory<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">53</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275758">ll=
RemoveInventory<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">53</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275759">ll=
SetScriptState<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">53</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275760">ll=
GetEnergy<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">53</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275761">ll=
SetText<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">53</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275762">ll=
SetText<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">53</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275763">ll=
PassTouches<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">53</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275764">ll=
PassCollisions<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">54</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275765">ll=
RequestAgentData<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">54</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275766">ll=
RequestInventoryData<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">54</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275767">ll=
SetDamage<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">54</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275768">ll=
TeleportAgentHome<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">54</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275769">ll=
ModifyLand<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">54</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275770">ll=
CollisionSound<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">54</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275771">ll=
CollisionSprite<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">55</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275772">ll=
GetAnimation<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">55</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275773">ll=
ResetScript<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">55</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275774">ll=
MessageLinked<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">55</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275775">ll=
PushObject<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">55</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275776">ll=
PassCollisions<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">55</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275777">ll=
GetScriptName<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">55</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275778">ll=
GetNumberOfSides<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">55</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275779">ll=
AxisAngle2Rot<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">56</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275780">ll=
Rot2Axis<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">56</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275781">ll=
Rot2Angle<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">56</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275782">ll=
Acos<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">56</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275783">ll=
Asin<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">56</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275784">ll=
AngleBetween<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">56</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275785">ll=
GetInventoryKey<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">56</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275786">ll=
AllowInventoryDrop<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">56</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275787">ll=
GetSunDirection<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">56</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275788">ll=
GetTextureOffset<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">57</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275789">ll=
GetTextureScale<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">57</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275790">ll=
GetTextureRot<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">57</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275791">ll=
SubStringIndex<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">57</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275792">ll=
GetOwnerKey<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">57</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275793">ll=
GetCenterOfMass<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">57</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275794">ll=
ListSort<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">57</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275795">ll=
GetListLength<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">57</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275796">ll=
List2Integer<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">58</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275797">ll=
List2Float<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">58</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275798">ll=
List2String<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">58</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275799">ll=
List2Key<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">58</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275800">ll=
List2Vector<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">58</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275801">ll=
List2Rot<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">58</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275802">ll=
List2List<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">58</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275803">ll=
DeleteSubList<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">58</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275804">ll=
GetListEntryType<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">59</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275805">ll=
List2CSV<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">.. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">59</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275806">ll=
CSV2List<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">59</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275807">ll=
ListRandomize<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">59</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275808">ll=
List2ListStrided<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">59</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275809">ll=
ListInsertList<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">59</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275810">ll=
ListFindList<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">59</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275811">ll=
GetObjectName<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">60</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275812">ll=
SetObjectName<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">60</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275813">ll=
GetDate<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">60</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275814">ll=
EdgeOfWorld<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">60</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275815">ll=
GetAgentInfo<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">60</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275816">ll=
Key2Name<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">60</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275817">ll=
EjectFromLand<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">60</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275818">ll=
ParseString2List<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">60</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275819">ll=
OverMyLand<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">61</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275820">ll=
GetLandOwnerAt<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">61</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275821">ll=
GetNotecardLine<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">61</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275822">ll=
GetAgentSize<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">61</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275823">ll=
SameGroup<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">61</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275824">ll=
UnSit<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">61</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275825">ll=
GroundSlope<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none">. =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">61</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275826">ll=
GroundNormal<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">62</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc3><SPAN class=3DMsoHyperlink><SPAN style=3D"COLOR: =
blue"><A=20
href=3D"http://oz.slinked.net/history/lsl2_reference.htm#_Toc43275827">ll=
GroundContour<SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: none"> =
</SPAN><SPAN=20
style=3D"DISPLAY: none; COLOR: windowtext; TEXT-DECORATION: =
none">62</SPAN></A></SPAN></SPAN></P>
<P class=3DMsoToc2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: =
0in"></P></DIV><SPAN=20
style=3D"FONT-SIZE: 12pt; FONT-FAMILY: Arial"><BR =
style=3D"PAGE-BREAK-BEFORE: auto"=20
clear=3Dall></SPAN>
<DIV class=3DSection2></DIV><B><SPAN=20
style=3D"FONT-SIZE: 18pt; FONT-FAMILY: Arial"><BR=20
style=3D"PAGE-BREAK-BEFORE: always" clear=3Dall></SPAN></B>
<DIV class=3DSection3>
<H1 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc20180901></A><A=20
name=3D_Toc43275540>Introduction</A></H1>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275541></A><A=20
name=3D_Toc20180902>Overview</A></H2>
<P class=3DMsoNormal>This document is broken down into three major =
sections:=20
Introduction, User=92s Manual, and Reference Manual.&nbsp; The =
Introduction=20
provides a high level review of the Linden Scripting Language (LSL) and =
how it=20
is used within Linden World.&nbsp; The User=92s Manual provides a more =
detailed=20
review of the syntax and functionality of LSL and provides sample =
code.&nbsp;=20
The Reference Manual provides detailed information on the underlying =
code and=20
data structures, byte code format, and execution model.&nbsp; This =
document=20
assumes that the reader has a working knowledge of programming and is =
familiar=20
with a high level language like Java or C.</P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275542></A><A=20
name=3D_Toc20180903>Design Goals of LSL</A></H2>
<P class=3DMsoNormal>LSL was designed with the following goals in =
mind:</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Provide a robust method for =
users to add=20
behavior to objects in Linden World</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Provide a simple interface to =
exchange=20
scripts and to modify tuning values</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Provide a powerful language for =
advanced=20
users</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Ensure that user scripts cannot =
crash a=20
simulator or greatly reduce simulator performance</P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275543></A><A=20
name=3D_Toc20180904>Description</A></H2>
<P class=3DMsoNormal>LSL is a Java-like language incorporating several=20
extensions.&nbsp; It sticks to the well known C/Java syntactic style, =
but allows=20
tuning variables to be exposed via a GUI to allow users with no =
programming=20
knowledge to modify scripts.&nbsp; Much like faces or textures, this =
will allow=20
an economy to evolve around well written scripts.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Multiple scripts may also be attached to the same =
object,=20
allowing a style of small, single-function scripts to evolve.&nbsp; This =
leads=20
to scripts that perform specific functions (=93hover=94, =93follow=94, =
etc.) and allows=20
them to be combined to form new behaviors.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>The text of the script is compiled into an =
executable byte=20
code, much like Java.&nbsp; This byte code is then run within a virtual =
machine=20
on the simulator.&nbsp; Each script receives a time slice of the total =
simulator=20
time allocated to scripts, so a simulator with many scripts would allow =
each=20
individual script less time rather than degrading its own =
performance.&nbsp; In=20
addition, each script executes within its own chunk of memory, =
preventing=20
scripts from writing into protected simulator memory or into other =
scripts,=20
making it much harder for scripts to crash the simulator.</P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275544></A><A=20
name=3D_Toc20180905>Example =96 door.lsl</A></H2>
<P class=3DMsoNormal>The following LSL code opens a door when the user =
speaks the=20
magic word.&nbsp; It handles the concepts of user chats, exposure of =
global=20
tuning variables, and calls library functions.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
exposed global variables accessible via GUI</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
the phrase the user will use</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">string&nbsp; gMagicPhrase =3D =
"Shazamm!";</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
how fast the door opens</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">float gOpenTime =3D 1.0;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
global variables that aren=92t exposed</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer gSteps =3D=20
20;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// the door moves through 20 steps</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">vector&nbsp; gOffset =3D &lt;0.0, 0.0,=20
0.10&gt;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
2=20
meters of total motion</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
states the script can be in</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
all scripts start in the default state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">default</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // setup to listen only for =
magic=20
phrase</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_entry()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
llSay(0, "To=20
open me, say " + gMagicPhrase);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;// =
listen on=20
chat channel 0 for the magic phrase from anyone</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
llListen(0,=20
"", "", gMagicPhrase);&nbsp; </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // handle chat messages that =
we=92re=20
listening for</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; listen(integer channel, =
string name,=20
key id, string message)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
integer=20
i;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
vector basepos=20
=3D llGetPos();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
loop=20
through the steps, adjusting the door</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for =
(i =3D 0; i=20
&lt; gSteps; i++)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// set the object's position</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetPos(basepos +&nbsp; i*gOffset);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSleep(0.1);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
now, flip=20
the offset vector to move us back down</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
gOffset *=3D=20
-1;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal><B><SPAN style=3D"FONT-SIZE: =
8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal>The key elements of this example are:</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>The default state.&nbsp; All =
scripts must=20
have a default state, which is the state that scripts start out in.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>The state_entry and chat event=20
handlers.&nbsp; LSL uses an event execution model, meaning that events =
cause=20
specific pieces of code to execute.&nbsp; In this script, the =
state_entry event=20
is executed at script start when we enter the default state.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Library function calls.&nbsp; =
Any function=20
that begins with =93ll=94 is a library function call.&nbsp; In this =
example,=20
llListen tells the script to listen for the magic words.&nbsp; If those =
words=20
are heard, the chat event is executed.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>The overall syntax (bracing and =
keywords) is=20
very similar to Java/C.<BR style=3D"PAGE-BREAK-BEFORE: always" =
clear=3Dall><A=20
name=3D_Toc43275545></A><A name=3D_Toc20180906><B><SPAN=20
style=3D"FONT-SIZE: 18pt">User=92s Manual</SPAN></B></A></P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275546></A><A=20
name=3D_Toc20180907>Overview</A></H2>
<P class=3DMsoNormal>LSL is loosely based on Java/C syntax with =
significant=20
changes as detailed below.&nbsp; </P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275547></A><A=20
name=3D_Toc20180908>Program Structure</A></H2>
<P class=3DMsoNormal>Below is an example LSL script:</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
global variable that isn=92t exposed</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">vector gStartPosition;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
global functions that can be called from any state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">make_physical_and_spin(vector =
torque)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // double the torque because =
we want=20
to</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; vector double_torque =3D=20
2.0*torque;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llSetTorque(double_torque,=20
FALSE);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
state sections</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
default state =96 all scripts must have a default state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">default</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // when a state is =
transitioned to,=20
the state_entry event is raised</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_entry()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
//&nbsp; Make=20
physical so it can move </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetStatus(STATUS_PHYSICS, TRUE);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
get the=20
base stating position</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
gStartPosition=20
=3D llGetPos();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
//&nbsp; Move=20
to 2 meters above the start position</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
gStartPosition.z +=3D 2.0;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llMoveToTarget(gStartPosition, 0.5);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
transition=20
to spin state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
state=20
SpinState;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // when a state is =
transitioned out=20
of, the state_exit event is raised</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_exit()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
set=20
critical damping to keep us on our stating location, with time constant =
of 0.5=20
seconds</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llMoveToTarget(gStartPosition, 0.5);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
SpinState is a user defined state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">state SpinState</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_entry()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
say hello=20
on channel 0</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
llSay(0,=20
"Starting to spin");</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
call global=20
function</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
make_physical_and_spin(&lt;0.1, 0.1, 0.0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>The LSL file is broken up as follows:</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275548></A><A=20
name=3D_Toc20180909>Variables</A></H3>
<P class=3DMsoNormal>LSL variables are case sensitive, made up of =
letters,=20
numbers, and underscores, and must start with a letter or =
underscore.</P>
<H4 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc20180910>Global=20
Variables and Functions</A></H4>
<P class=3DMsoNormal>Global variables and functions are accessible from =
anywhere=20
in the file.&nbsp; Global variables are declared much like Java or C, =
although=20
only one declaration may be made per line:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">vector gStartPosition;</SPAN></B></P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Global variables may also be initialized if =
desired, although=20
uninitialized global and local variables are initialized to legal zero=20
values:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">vector gStartPosition =3D=20
&lt;10.0,10.0,10.0&gt;;</SPAN></B></P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Global functions are also declared much like =
Java/C, with the=20
exception that no =93void=94 return value exists.&nbsp; Instead, if no =
return value=20
is needed, just don=92t specify one:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">make_physical_and_spin(vector =
torque)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // double the torque because =
we want=20
to</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; vector double_torque =3D=20
2.0*torque;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llSetState(STATUS_PHYSICS,=20
TRUE);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llApplyTorque(double=20
_torque);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<H4 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc20180911>Local=20
Variables</A></H4>
<P class=3DMsoNormal>Local variables are scoped below their declaration =
within the=20
block of code they are declared in and may be declared within any block =
of=20
code.&nbsp; Thus the following code is legal and will work like C:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">Integer test_function()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // Test vector that we can =
use=20
anywhere in the function</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; vector test =3D=20
&lt;1,2,3&gt;;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; integer j;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; for (j =3D 0; j &lt; 10;=20
j++)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
This vector=20
is a different variable than the one declared above</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
This IS NOT=20
good coding practice</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
vector test =3D=20
&lt;j, j, j&gt;;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // this test =
fails</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; if (test =3D=3D=20
&lt;9,9,9&gt;)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
never=20
reached</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275549></A><A=20
name=3D_Toc20180912>States and Event Handlers</A></H3>
<P class=3DMsoNormal>All scripts must have a default state, which is the =
state the=20
script starts in.&nbsp; States contain event handlers that are triggered =
by the=20
LSL virtual machine.&nbsp; States must have at least one event handler, =
but can=20
choose which handlers to use.&nbsp; Some handlers, like listen, require =
that the=20
script call a library function to setup information that determines when =
the=20
event happens.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>The example code sets the global variable =
gStartPosition=20
within the state_entry event handler, which is set when the script =
begins=20
execution.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">default</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // when a state is =
transitioned to,=20
the state_entry event is raised</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_entry()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
get the=20
base stating position</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
gStartPosition=20
=3D llGetPos();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
transition=20
to spin state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
state=20
SpinState;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // when a state is =
transitioned out=20
of, the state_exit event is raised</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_exit()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
set=20
critical damping to keep us on our stating location, with time constant =
of 0.5=20
seconds</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llMoveToTarget(gStartPosition, 0.5);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>The command state SpinState changes the state to =
the=20
SpinState state and raises the state_exit event, causing that handler to =
be=20
called.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>The user state SpinState works like the default =
state.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">state SpinState</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_entry()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
say hello=20
on channel 0</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
llSay(0,=20
gHello);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
call global=20
function</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
make_physical_and_spin(&lt;10.0, 10.0, 0.0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275550></A><A=20
name=3D_Toc20180913>Comments</A></H2>
<P class=3DMsoNormal>LSL uses Java/C++ style single line comments:</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
Name and Description</SPAN></B></P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275551></A><A=20
name=3D_Toc20180914>Types</A></H2>
<P class=3DMsoNormal>LSL supports the following basic types:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>integer</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">Signed, 32-bit integer =
value</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>float</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">32-bit floating point =
value</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>string</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">A sequence of =
characters</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">=93\=94 functions as =
an escape=20
character, so use =93\n=94 to enter a carriage return into a string, =
=93\t=94 to enter a=20
4 space tab, =93\\=94 to enter a backslash, =93\=94=94 to enter a double =
quote, and =93\=94=20
followed by any other character to enter that character.&nbsp; Note that =
the C=20
conventions of \ooo and \xhh are not supported.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>key</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">A unique identifier =
that can used=20
to reference objects in Linden World</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>vector</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">3 floats that can be =
acted on=20
together</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">Members are accessed =
via .x, .y.=20
or .z.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><A=20
name=3D_Toc20180915><SPAN style=3D"FONT-FAMILY: =
Symbol">=B7</SPAN>rotation</A></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">4 floats that =
represent a=20
rotation</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">Members are accessed =
via .x, .y.,=20
.z, or .w.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>list</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">A heterogeneous list =
of the other=20
data types </P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">Lists are created via =
comma=20
separated lists of the other data types enclosed by =93[=93 and =
=93]=94.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">string StringVar =3D =
<B>"</B>Hello,=20
Carbon Unit<B>"</B>;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">list MyList =3D [ =
1234,=20
ZERO_ROTATION, StringVar ];</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">Give this list:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">[ 1234, =
&lt;0,0,0,1&gt;,=20
<B>"</B>Hello, Carbon Unit<B>"</B> ]</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">Lists may be combined =
with other=20
lists or variables to form larger lists:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">MyList =3D 3.14159 + =
MyList;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">This would give the =
list:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">[ 3.14159, 1234, =
&lt;0,0,0,1&gt;,=20
<B>"</B>Hello, Carbon Unit<B>"</B> ]</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">MyList =3D MyList + =
MyList ;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">[ 3.14159, 1234, =
&lt;0,0,0,1&gt;,=20
<B>"</B>Hello, Carbon Unit<B>"</B>, 3.14159, 1234, &lt;0,0,0,1&gt;,=20
<B>"</B>Hello, Carbon Unit<B>"</B> ]</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">Library function are =
used to copy=20
data from lists, sort lists, copy/remove sublists.</P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275552>Arithmetic=20
Operations</A></H2>
<P class=3DMsoNormal>LSL supports a wide range of arithmetic operations =
between=20
its basic types using Java/C syntax.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">float&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foo_float =
=3D=20
4.0;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; foo_int =3D 4;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">vector&nbsp;&nbsp; foo_vector =3D=20
&lt;1,1,1&gt;;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">rotation&nbsp;&nbsp; foo_rotation =3D=20
&lt;1,0,0,0&gt;;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
scale up vector</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">foo_vector =3D foo_int * =
foo_vector;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
rotate vector by rotation</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">foo_vector =3D foo_vector * =
foo_rotation;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
mix integer and floats</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">foo_float =3D foo_float * =
foo_int;</SPAN></B></P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275553></A><A=20
name=3D_Toc20180916>Type Conversion</A></H2>
<P class=3DMsoNormal>Type conversion can either occur implicitly or=20
explicitly.&nbsp; Explicit type casts are accomplished using C =
syntax:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">float&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foo_float =
=3D=20
1.0;</SPAN></B></P>
<P class=3DMsoNormal style=3D"TEXT-INDENT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; foo_int =
=3D(integer)foo_float;</SPAN></B></P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275554></A><A=20
name=3D_Toc20180917>Implicit Type Casting</A></H3>
<P class=3DMsoNormal>LSL only supports two implicit type casts: integer =
to float=20
and string to key.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275555></A><A=20
name=3D_Toc20180918>Explicit Type Casting</A></H3>
<P class=3DMsoNormal>LSL supports the following explicit casts:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Integer to String</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Float to Integer</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Float to String</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Vector to String</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Rotation to String</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Integer to List</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Float to List</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Key to List</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>String to List</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Vector to List</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Rotation to List</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>String to Integer</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>String to Float</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>String to Vector</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>String to Rotation</P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275556></A><A=20
name=3D_Toc20180919></A>Loop Constructs</H2>
<P class=3DMsoNormal>LSL supports several C/Java loop structures.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275557></A><A=20
name=3D_Toc20180920>for</A></H3>
<P class=3DMsoNormal>The LSL for loop operates like the Java/C loop =
structure=20
except that variables may not be declared within the for command:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; j;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; count =3D 10;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">for (j =3D 0; j &lt; count; j++)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // do stuff =
here</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275558></A><A=20
name=3D_Toc20180921>do-while</A></H3>
<P class=3DMsoNormal>The LSL do-while loop operates like the Java/C loop =

structure:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; j;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; count =3D 10;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">do</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // do stuff here and =
increment=20
j</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">}=20
while (j &lt; count);</SPAN></B></P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275559></A><A=20
name=3D_Toc20180922>while</A></H3>
<P class=3DMsoNormal>The LSL while loop operates like the Java/C loop=20
structure:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; j;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; count =3D 10;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">while (j &lt; count)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // do stuff here and =
increment=20
j</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275560></A><A=20
name=3D_Toc20180923>Conditional Statements</A></H2>
<P class=3DMsoNormal>LSL supports if and if-else conditional =
statements.</P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275561></A><A=20
name=3D_Toc20180924>if</A></H2>
<P class=3DMsoNormal>The LSL if statements operates just like the Java/C =

versions:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; small =3D 1;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; big =3D 10;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">if=20
(small &lt; big)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // we get =
here!</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275562></A><A=20
name=3D_Toc20180925>if-else</A></H2>
<P class=3DMsoNormal>The LSL if-else statements operates just like the =
Java/C=20
versions:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; small =3D 1;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">integer&nbsp; big =3D 10;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">if=20
(small &lt; big)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // we get =
here!</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">else</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // we don=92t get =
here</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275563></A><A=20
name=3D_Toc20180926>Jumps</A></H2>
<P class=3DMsoNormal>LSL supports a jump statement within functions or =
event=20
handlers.</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">@Label;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
do stuff</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">jump Label;</SPAN></B></P>
<H1 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275564></A><A=20
name=3D_Toc20180927>Example Code</A></H1>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275565></A><A=20
name=3D_Toc20180928>New Firework Script</A></H2>
<P class=3DMsoNormal>This new firework script work similarly to the=20
original.&nbsp; Note that this script requires that sounds names =
=93whoosh=94 and=20
=93boom=94 be in the object it is attached to, as well as textures =
=93smoke=94 and=20
=93spark.=94</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
new and improved firework</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
global variable for timing when the firework explodes</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">float gTotalTime =3D 0.0;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
how often do we put out little smoke poofs</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">float gPoofInterval =3D 0.1;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
what direction are we flying</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">vector gDirection;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
all scripts start in the default state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">default</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_entry()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; &nbsp;{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSay(0, "Touch me to launch!");</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetStatus(STATUS_PHYSICS, TRUE);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // if an avatar touches us =
and then=20
let's go this event is triggered</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; touch_end(integer =
num)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
only launch=20
if we're physical</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;if=20
(llGetStatus(STATUS_PHYSICS))</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// we'll use the timer callback to make smoke poofs, fly upwards, and=20
blowup</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
//&nbsp; use a long initial delay for dramatic effect</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetTimerEvent(1.0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// get our up vector and create a strong upwards impulse to pop us=20
upwards</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
gDirection =3D &lt;0.0, 0.0, 1.0&gt; * llGetMass() * =
15.0;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llApplyImpulse(gDirection, TRUE);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetTorque(&lt;0.0,0.0,2.0&gt;, TRUE);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// make a continuous sound of us flying updards</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llLoopSound("whoosh", 2.0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// make a puff of smoke to show our launch</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llMakeExplosion(20, 1.0, 2, 5.0, 0.2, "smoke", &lt;0.0, 0.0,=20
0.0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // called every =
gPoofInterval=20
seconds</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; timer()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
again, get=20
our up vector to apply thrust along</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
gDirection =3D=20
&lt;0.0, 0.0, 1.0&gt; * llGetMass() * 20.0 * gTotalTime;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
also apply=20
a torque to make it rotate along the vertical axis</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetForceAndTorque(gDirection, &lt;0.0,0.0,5.0&gt;, =
TRUE);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
bump up the=20
time</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
gTotalTime +=3D=20
gPoofInterval;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
do we need=20
to explode?</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if =
(gTotalTime=20
&gt; 3.0)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// Turn off the continuous sound</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
&nbsp;&nbsp;&nbsp;llStopSound();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// Make an explosion sound</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llTriggerSound("boom", 2.0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// The explosion arguments are number of particles, scale of particles,=20
</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
//&nbsp; speed of particles, lifetime of paricles, how directional the =
particles=20
are,</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
//&nbsp; with a smaller number being more directional, and the UUID of =
the=20
texture used</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llMakeExplosion(40, 1.0, 20.0, 2.0, 1.0, "poof", &lt;0.0, 0.0,=20
0.0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// Kill ourself</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llDie();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;=20
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// we'll use the timer callback to make smoke poofs, fly upwards, and=20
blowup</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetTimerEvent(gPoofInterval);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// make a small smoke poof</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llMakeExplosion(10, 1.0, 2, 5.0, 0.2, "smoke", &lt;0.0, 0.0,=20
0.0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275566></A><A=20
name=3D_Toc20180929>Gambling Script</A></H2>
<P class=3DMsoNormal>This script illustrates how to make a script that =
reacts to=20
money being given to it and gives money to a user.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
A simple gambling script</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
all scripts start in the default state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">default</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // tell people what to=20
do</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_entry()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
Need to ask=20
owner for permission to debit account</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; key =
owner =3D=20
llGetOwner();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llRequestPermissions(owner, PERMISSION_DEBIT);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
The first=20
argument in the llSay library function says what channel to =
use</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
//&nbsp; Only=20
channel 0 is audible by avatars</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
llSay(0, "Give=20
me money!");</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // being given money =
triggers this=20
callback</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; money(key name, integer=20
amount)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
Currently=20
the type cast doesn't bind correctly, so extra parenthesis are=20
needed</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
//&nbsp; to=20
properly typecast in arithmetic expressions</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
//&nbsp; This=20
is also a way to see what your UUID is</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
llSay(0,=20
"Thanks " + ((string)name) + " for the " + ((string)amount) + "=20
L$!");</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
This=20
gambling script has a 1 in 10 chance of winning but only pays 5 to 1,=20
which</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
//&nbsp; isn't=20
very good odds</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if=20
(llFrand(1.0) &gt; 0.9)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSay(0, "You WIN " + ((string)(amount * 5)));</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
// the llGiveMoney library call allows you to remotely transfer money to =
another=20
user</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llGiveMoney(name, amount * 5);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275567></A><A=20
name=3D_Toc20180930>The Cannon Scripts</A></H2>
<P class=3DMsoNormal>This combination of scripts create a cannonball =
that explodes=20
when it hits the ground, blocker bricks that explode when cannonballs =
hit them,=20
a cannon that fires cannon balls, and a fuse that causes the cannon to=20
fire.&nbsp; The cannonball needs to be saved into your inventory so that =
its=20
UUID can be used in the cannon script.&nbsp; Be aware that since the =
cannonball=20
explodes when in contact with the ground, you=92ll need to place it on =
an object=20
that you=92ve dragged into the air.&nbsp; The cannon, cannon ball, and =
blocker=20
bricks will need the sound =93boom=94 and the texture =93poof=94 and the =
fuse will need=20
texture =93poof.=94&nbsp; The cannon will also need the object cannon =
ball in it=92s=20
inventory.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
cannon script</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
Global variable that provides for a minimum delay between =
shots</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">float&nbsp;&nbsp; gReloadTime =3D =
1.0;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
A global function that creates an explosion, a sound, and then kills=20
itself</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">die()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // The sound arguments are =
UUID of the=20
sound, volume of the sound,</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; //&nbsp; whether the sound =
is=20
continuous or not, and whether to cancel the sound or not</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llTriggerSound("boom",=20
2.0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // The explosion arguments =
are number=20
of particles, scale of particles, </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; //&nbsp; speed of particles, =
lifetime=20
of paricles, how directional the particles are,</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; //&nbsp; with a smaller =
number being=20
more directional, and the UUID of the texture used</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llMakeExplosion(60, 1.0, =
10.0, 2.0,=20
1.0, "poof", &lt;0.0, 0.0, 0.0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llDie();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
all scripts start in the default state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">default</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // setup when script first =
starts=20
running</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_entry()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
make sure=20
the object is physical so that the llMoveToTarget library call=20
works</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetStatus(STATUS_PHYSICS, TRUE);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
setup=20
listen callback for chat channel 1 and the text "fire"</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
integer num =3D=20
llListen(1, "","","fire");</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
fix us on=20
the position where we are</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
vector pos =3D=20
llGetPos();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
the 0.1 in=20
the MoveToTarget call makes the object move there quickly</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llMoveToTarget(pos, 0.1);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // if an avatar moves the =
cannon,=20
relock to that point</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; touch_end(integer =
num)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
because=20
only we only be moving to one target at a time, this call replaces the =
previous=20
one</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
vector pos =3D=20
llGetPos();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llMoveToTarget(pos, 0.1);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // this listen event will be =
triggered=20
by chat text of "fire" on channel 1</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; listen(integer chan, string =
name, key=20
id, string text)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
trigger a=20
sound and make a smoke poof to indicate firing</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llTriggerSound("boom", 2.0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llMakeExplosion(10, 1.0, 2.0, 5.0, 0.2, "poof", &lt;0.0, 0.0,=20
0.0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
determine=20
where we're going to fire the cannonball</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
rotation rot =3D=20
llGetRot();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
extract our=20
"up" direction from our rotation</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
vector=20
direction =3D llRot2Up(rot);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
create a=20
small offset so that the cannonball isn't created inside the=20
cannon</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
vector pos =3D=20
llGetPos();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pos =
+=3D=20
direction;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
generate a=20
velocity of 30 meters/second</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
direction *=3D=20
30.0;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
create the=20
cannonball</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
the=20
llRexObject arguments are the owner's UUID, the object to rez-ed UUID, =
the=20
position to rez the object, </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; =
&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp; the=20
velocity of the object, and the rotation of the object</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llRezObject("cannon ball", pos, direction, &lt;0,0,0,1&gt;, =
0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
put the=20
cannon to sleep until reload time is over</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSleep(gReloadTime);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // if a cannonball hits us, =
blow=20
up</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; collision_start(integer=20
total_num)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
only blow=20
up if it's a cannonball</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; key =
test =3D=20
llDetectedKey(0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (test&nbsp;=20
=3D=3D(key)"cannonball")</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
die();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
cannon ball</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
A global function that creates an explosion, a sound, and then kills=20
itself</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">die()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llTriggerSound("boom",=20
2.0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llMakeExplosion(80, 1.0, =
13.0, 2.2,=20
1.0, "poof", &lt;0.0, 0.0, 0.0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llDie();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
all scripts start in the default state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">default</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // make sure that we are =
physical so=20
that we fly through the air when created</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; state_entry()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetStatus(STATUS_PHYSICS, TRUE);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // when we hit the ground, =
explode and=20
die</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; land_collision_start(vector=20
pos)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
die();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
fuse script</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">float gScale =3D 1.0;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
all scripts start in the default state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">default</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; touch_end(integer=20
total_num)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetTimerEvent(0.2);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llMakeSmoke(10, 0.2, 3.0, 3.0, 0.10, "poof", =
&lt;0,0,0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSleep(0.5);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp; &nbsp;timer()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
vector scale =3D=20
llGetScale();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
scale.z =3D=20
gScale;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
gScale -=3D=20
0.05;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetScale(scale);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
llMakeSmoke(2,=20
0.2, 3.0, 3.0, 0.10, "poof", &lt;0,0,0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if =
(gScale=20
&lt; 0.2)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSay(1, "fire");</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
gScale =3D 1.0;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
scale.z =3D gScale;</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetScale(scale);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
llSetTimerEvent(0.0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
blockerbrick</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
A global function that creates an explosion, a sound, and then kills=20
itself</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">die()</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // The sound arguments are =
UUID of the=20
sound, volume of the sound,</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; //&nbsp; whether the sound =
is=20
continuous or not, and whether to cancel the sound or not</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llTriggerSound("boom",=20
2.0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // The explosion arguments =
are number=20
of particles, scale of particles, </SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; //&nbsp; speed of particles, =
lifetime=20
of paricles, how directional the particles are,</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; //&nbsp; with a smaller =
number being=20
more directional, and the UUID of the texture used</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llMakeExplosion(20, 1.0, =
10.0, 2.0,=20
1.0, "poof", &lt;0.0, 0.0, 0.0&gt;);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // Kill =
ourself</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; llDie();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN =
style=3D"FONT-SIZE: 8pt">//=20
all scripts start in the default state</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">default</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">{</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; // if a cannonball hits us,=20
explode</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; collision_start(integer=20
total_num)</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; {</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
string test =3D=20
llDetectedName(0);</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if =
(test&nbsp;=20
=3D=3D "cannon ball")</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: =
8pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
die();</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">&nbsp;&nbsp;&nbsp; }</SPAN></B></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt"></SPAN></B>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in"><B><SPAN=20
style=3D"FONT-SIZE: 8pt">}</SPAN></B></P>
<H1 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275568></A><A=20
name=3D_Toc20180931>Reference Manual</A></H1>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275569></A><A=20
name=3D_Toc20180932>Events</A></H2>
<P class=3DMsoNormal>The following events may be handled within =
states.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275570></A><A=20
name=3D_Toc20180933>state_entry()</A></H3>
<P class=3DMsoNormal>The state_entry event occurs whenever a new state =
is entered,=20
including program start, and is always the first event handled. No data =
is=20
passed to handler.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275571></A><A=20
name=3D_Toc20180934>state_exit()</A></H3>
<P class=3DMsoNormal>The state_entry event occurs whenever the state =
command is=20
used to transition to another state.&nbsp; It is handled before the new =
state=92s=20
state_entry event.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275572></A><A=20
name=3D_Toc20180935>touch_start(integer total_number)</A></H3>
<P class=3DMsoNormal>This event is raised when a user first touches the =
object the=20
script is attached to.&nbsp; The number of touching objects is passed to =
the=20
script.&nbsp; Information on those objects may be gathered via the =
llDetected*=20
library functions.&nbsp; </P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275573></A><A=20
name=3D_Toc20180936>touch(integer total_number)</A></H3>
<P class=3DMsoNormal>This event is raised while a user is touching the =
object the=20
script is attached to.&nbsp; The number of touching objects is passed to =
the=20
script.&nbsp; Information on those objects may be gathered via the =
llDetected*=20
library functions.&nbsp; </P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275574></A><A=20
name=3D_Toc20180937>touch_end(integer total_number)</A></H3>
<P class=3DMsoNormal>This event is raised when a user stops touching the =
object=20
the script is attached to.&nbsp; The number of touching objects is =
passed to the=20
script.&nbsp; Information on those objects may be gathered via the =
llDetected*=20
library functions.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275575></A><A=20
name=3D_Toc20180938>collision_start(integer total_number)</A></H3>
<P class=3DMsoNormal>This event is raised when another object begins to =
collide=20
with the object the script is attached to.&nbsp; The number of detected =
objects=20
is passed to the script.&nbsp; Information on those objects may be =
gathered via=20
the llDetected* library functions. (Collisions are also generated if a =
user=20
walks into an object.)</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275576></A><A=20
name=3D_Toc20180939>collision(integer total_number)</A></H3>
<P class=3DMsoNormal>This event is raised while another object is =
colliding with=20
the object the script is attached to.&nbsp; The number of detected =
objects is=20
passed to the script.&nbsp; Information on those objects may be gathered =
via the=20
llDetected* library functions. (Collisions are also generated if a user =
walks=20
into an object.)</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275577></A><A=20
name=3D_Toc20180940>collision_end(integer total_number)</A></H3>
<P class=3DMsoNormal>This event is raised when another object stops =
colliding with=20
the object the script is attached to.&nbsp; The number of detected =
objects is=20
passed to the script.&nbsp; Information on those objects may be gathered =
via the=20
llDetected* library functions. (Collisions are also generated if a user =
walks=20
into an object.)</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275578></A><A=20
name=3D_Toc20180941>land_collision_start(vector position)</A></H3>
<P class=3DMsoNormal>This event is raised when the object the script is =
attached=20
to begins to collide with the ground.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275579></A><A=20
name=3D_Toc20180942>land_collision(vector position)</A></H3>
<P class=3DMsoNormal>This event is raised when the object the script is =
attached=20
to is colliding with the ground.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275580></A><A=20
name=3D_Toc20180943>land_collision_end(vector position)</A></H3>
<P class=3DMsoNormal>This event is raised when the object the script is =
attached=20
to stops colliding with the ground.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275581></A><A=20
name=3D_Toc20180944>timer()</A></H3>
<P class=3DMsoNormal>This event is raised at regular intervals set by =
the=20
llSetTimerEvent library function.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275582></A><A=20
name=3D_Toc20180945>listen(integer channel, string name, key id, string=20
message)</A></H3>
<P class=3DMsoNormal>This event is raised whenever a chat message =
matching the=20
constraints passed in the llListen command is heard.&nbsp; The name and =
key of=20
the speaker and the message are passed.&nbsp; Channel 0 is the public =
chat=20
channel that all avatars see as chat text.&nbsp; Channels 1 =96 =
2,147,483,648 are=20
private channels that aren=92t sent to avatars but other scripts can =
listen=20
for.</P>
<P class=3DMsoNormal>&nbsp;</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275583></A><A=20
name=3D_Toc20180946>sensor(integer total_number)</A></H3>
<P class=3DMsoNormal>This event is raised whenever objects matching the=20
constraints of the llSensor command are detected.&nbsp; The number of =
detected=20
objects is passed to the script.&nbsp;&nbsp;&nbsp; Information on those =
objects=20
may be gathered via the llDetected* library functions.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275584></A><A=20
name=3D_Toc20180947>no_sensor()</A></H3>
<P class=3DMsoNormal>This event is raised when sensors are active (via =
the=20
llSensor library call) but are not sensing anything.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275585></A><A=20
name=3D_Toc20180948>control(key name, integer levels, integer =
edges)</A></H3>
<P class=3DMsoNormal>Once a script has the ability to grab control =
inputs from the=20
avatar, this event will be used to pass the commands into the =
script.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275586></A><A=20
name=3D_Toc20180949>at_target(integer number, vector targetpos, vector=20
ourpos)</A></H3>
<P class=3DMsoNormal>When a script comes within a defined range of a =
target=20
position (defined by llTarget library call) this event is raised.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275587></A><A=20
name=3D_Toc20180950>not_at_target()</A></H3>
<P class=3DMsoNormal>When a target is set (via the llTarget library =
call) but the=20
script is outside the specified range this event is raised.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275588></A><A=20
name=3D_Toc20180951>at_rot_target(integer number, rotation targetrot, =
rotation=20
ourrot)</A></H3>
<P class=3DMsoNormal>When a script comes within a defined angle of a =
target=20
rotation (defined by llRotTarget library call) this event is raised.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275589></A><A=20
name=3D_Toc20180952>not_at_rot_target()</A></H3>
<P class=3DMsoNormal>When a target is set (via the llRotTarget library =
call) but=20
the script is outside the specified angle this event is raised.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275590></A><A=20
name=3D_Toc20180953>money(key giver, integer amount)</A></H3>
<P class=3DMsoNormal>User giver has given an amount of Linden dollars to =
the=20
object.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275591></A><A=20
name=3D_Toc20180954>email(string time, string address, string subject, =
string=20
body, integer remaining)</A></H3>
<P class=3DMsoNormal>An email sent to the object this script was =
attached to was=20
waiting on the dataserver.&nbsp; The remaining tells how many more =
emails are=20
waiting.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275592></A><A=20
name=3D_Toc20180955>run_time_permissions(integer permissions)</A></H3>
<P class=3DMsoNormal>Scripts need permission from either the owner or =
the avatar=20
they wish to act on before they perform certain functions, such as =
debiting=20
money from their owner=92s account, triggering an animation on an =
avatar, or=20
capturing control inputs.&nbsp; The llRequestPermissions library =
function is=20
used to request these permissions and the various permissions integer =
constants=20
can be supplied.&nbsp; The integer returned to this event handler =
contains the=20
current set of permissions flags, so if permissions =3D=3D 0 then no =
permissions are=20
set.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275593></A><A=20
name=3D_Toc20180956>changed(integer changed)</A></H3>
<P class=3DMsoNormal>Triggered when various events change the =
object.&nbsp; Test=20
change with CHANGED_INVENTORY, CHANGED_COLOR, CHANGED_SHAPE, =
CHANGED_SCALE,=20
CHANGED_TEXTURE, or CHANGED_LINK.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275594></A><A=20
name=3D_Toc20180957>attach(key attached)</A></H3>
<P class=3DMsoNormal>Triggered whenever a object with this script is =
attached or=20
detached from an avatar.&nbsp; If it is attached, attached is the key of =
the=20
avatar it is attached to, otherwise attached =3D=3D NULL_KEY.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275595></A><A=20
name=3D_Toc20180958>moving_start()</A></H3>
<P class=3DMsoNormal>Triggered whenever a object with this script starts =

moving.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275596></A><A=20
name=3D_Toc20180959>moving_end()</A></H3>
<P class=3DMsoNormal>Triggered whenever a object with this script stops=20
moving.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc20180961></A><A=20
name=3D_Toc43275597></A><A name=3D_Toc20180960>on_rez(integer =
start_param)</A></H3>
<P class=3DMsoNormal>Triggered whenever a object is rez-ed from =
inventory or by=20
another object.&nbsp; The start_param is the start parameter passed by=20
llRezObject.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275598>link_message(integer sender_num, integer num, string =
str, key=20
id)</A></H3>
<P class=3DMsoNormal>Triggered when object receives a link message via=20
LLMessageLinked library function call.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275599>object_rez(key id)</A></H3>
<P class=3DMsoNormal>Triggered when object rez-es in another object from =
its=20
inventory.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275600>dataserver(key requested, string data)</A></H3>
<P class=3DMsoNormal>Triggered when the requested data is returned to =
the=20
script.&nbsp; Data may be requested by the llRequestAgentData, the=20
llRequestInventoryData, and the llGetNotecardLine function calls.</P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275601>Arithmetic=20
Operations</A></H2>
<P class=3DMsoNormal>LSL2 supports many arithmetic operations by =
default.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275602></A><A=20
name=3D_Toc20180962>Assignment and Comparison</A></H3>
<P class=3DMsoNormal>The assignment operator, =3D, is used by all =
types.&nbsp; The=20
equals, =3D=3D, and not equals, !=3D, operators are also used by all =
types.&nbsp; The=20
various inequality operators, &lt;, &gt;, &lt;=3D, &gt;=3D, are defined =
for integer=20
and float types.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275603></A><A=20
name=3D_Toc20180963>Integer Arithmetic</A></H3>
<P class=3DMsoNormal>LSL2 supports +, -, *, /, %, &amp;&amp;, ||, !, ~, =
%, | , and=20
^.&nbsp; All operations have the same meanings as their C =
counterparts.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275604></A><A=20
name=3D_Toc20180964>Integer Constants</A></H3>
<P class=3DMsoNormal>LSL2 supports the following integer constants: </P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Boolean values: TRUE and =
FALSE</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Status flags (can be or=92ed =
together) for=20
llSetStatus and llGetStatus library calls: </P>
<P class=3DMsoNormal=20
style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: 0.25in">STATUS_PHYSICS =
controls whether=20
the object can move physically</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">STATUS_PHANTOM =
controls whether=20
the object collides or not STATUS_ROTATE_X,</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">STATUS_ROTATE_Y, =
and</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">STATUS_ROTATE_Z =
control whether=20
the object can rotate around the specific axis or not</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">STATUS_BLOCK_GRAB =
controls whether=20
the object can be grabbed STATUS_SANDBOX controls whether the object can =
cross=20
region boundaries and move more than 20 meters from its creation =
point</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">STATUS_DIE_AT_EDGE =
controls=20
whether the object is returned to the owner=92s inventory if it wanders =
off the=20
edge of the world</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Object type description (can be =
or=92ed=20
together) for sensor library calls: AGENT, ACTIVE, PASSIVE, and =
SCRIPTED</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Permissions constants (can be =
or=92ed=20
together):</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">PERMISSION_DEBIT,=20
PERMISSION_TAKE_CONTROLS, PERMISSION_REMAP_CONTROLS,=20
PERMISSION_TRIGGER_ANIMATION, PERMISSION_ATTACH, =
PERMISSION_RELEASE_OWNERSHIP,=20
PERMISSION_CHANGE_LINKS, PERMISSION_CHANGE_JOINTS,=20
PERMISSION_CHANGE_PERMISSIONS</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Inventory constants used for =
managing=20
object=92s inventory:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">INVENTORY_TEXTURE,=20
INVENTORY_SOUND, INVENTORY_OBJECT, INVENTORY_SCRIPT, INVENTORY_LANDMARK, =

INVENTORY_CLOTHING, INVENTORY_NOTECARD, INVENTORY_BODYPART</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>Attachment constants for =
attaching to=20
avatars via llAttachToAvatar:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_CHEST</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_HEAD</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_LSHOULDER</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_RSHOULDER</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_LHAND</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_RHAND</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_LFOOT</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_RFOOT</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_BACK</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_PELVIS</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_MOUTH</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_CHIN</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_LEAR</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_REAR</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_LEYE</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_REYE</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_NOSE</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_RUARM</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_RLARM</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_LUARM</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_LLARM</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_RHIP</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_RULEG</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_RLLEG</P>
<P class=3DMsoNormal=20
style=3D"MARGIN-LEFT: =
0.5in">ATTACH_LHIP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =

</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_LULEG</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_LLLEG</P>
<P class=3DMsoNormal=20
style=3D"MARGIN-LEFT: 0.5in">ATTACH_BELLY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
</P>
<P class=3DMsoNormal=20
style=3D"MARGIN-LEFT: =
0.5in">ATTACH_RPEC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">ATTACH_LPEC</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><A=20
name=3D_Toc20180965><SPAN style=3D"FONT-FAMILY: =
Symbol">=B7</SPAN>Attachment constants=20
for llModifyLand:</A></P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">LAND_LEVEL, =
LAND_RAISE,=20
LAND_LOWER, LAND_SMALL_BRUSH, LAND_MEDIUM_BRUSH, LAND_LARGE_BRUSH</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-SIZE: 14pt; FONT-FAMILY: Symbol">=B7</SPAN>Link constants =
for=20
llSetLinkColor, llMessageLinked:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: =
0.25in">LINK_SET<B>,=20
</B>LINK_ROOT<B>, </B>LINK_ALL_OTHERS<B>, </B>LINK_ALL_CHILDREN</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-SIZE: 14pt; FONT-FAMILY: Symbol">=B7</SPAN>Control =
constants for use=20
in llTakeControls and in the control event handler:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: =
0.25in">CONTROL_FWD=20
Tests for avatar forward control</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: =
0.25in">CONTROL_BACK=20
Tests for avatar back control</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: =
0.25in">CONTROL_LEFT=20
Tests for avatar move left control</P>
<P class=3DMsoNormal=20
style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: 0.25in">CONTROL_RIGHT Tests =
for avatar=20
move right control</P>
<P class=3DMsoNormal=20
style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: 0.25in">CONTROL_ROT_LEFT =
Tests for=20
avatar rotate left control</P>
<P class=3DMsoNormal=20
style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: 0.25in">CONTROL_ROT_RIGHT =
Tests for=20
avatar rotate right control</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: =
0.25in">CONTROL_UP=20
Tests for avatar up control</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: =
0.25in">CONTROL_DOWN=20
Tests for avatar down control</P>
<P class=3DMsoNormal=20
style=3D"MARGIN-LEFT: 0.25in; TEXT-INDENT: 0.25in">CONTROL_LBUTTON Tests =
for=20
avatar left button control</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">CONTROL_ML_LBUTTON =
Tests for=20
avatar left button control with the avatar in mouse look</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-SIZE: 14pt; FONT-FAMILY: Symbol">=B7</SPAN>Change =
constants are passed=20
into the changed event handler:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">CHANGED_INVENTORY test =
for changed=20
object inventory</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">CHANGED_COLOR tests =
for changed=20
object color</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">CHANGED_SHAPE tests =
for changed=20
object shape (box to cylinder, for example)</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">CHANGED_SCALE tests =
for changed=20
object scale</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">CHANGED_TEXTURE tests =
for changed=20
object texture or texture offset, scale or rotation</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">CHANGED_LINK tests for =
linking of=20
delinking</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-SIZE: 14pt; FONT-FAMILY: Symbol">=B7</SPAN>List type =
constants are=20
used to determine the type of list members:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">TYPE_INTEGER, =
TYPE_FLOAT,=20
TYPE_STRING, TYPE_KEY, TYPE_VECTOR, TYPE_ROTATION, TYPE_INVALID</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-SIZE: 14pt; FONT-FAMILY: Symbol">=B7</SPAN>llGetAgentInfo =
return=20
values:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">AGENT_FLYING if the =
agent is=20
flying</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">AGENT_ATTACHMENTS if =
the agent has=20
attachments</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">AGENT_SCRIPTED if the =
agent has=20
scripted attachments</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275605>Float=20
Arithmetic</A></H3>
<P class=3DMsoNormal>LSL2 supports +, -, *, and /.&nbsp; All operations =
have the=20
same meanings as their C counterparts.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275606></A><A=20
name=3D_Toc20180966>Floating Point Constants</A></H3>
<P class=3DMsoNormal>LSL2 supports the following floating point =
constants:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: =
Symbol">=B7</SPAN>PI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;=20
3.14159265</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: =
Symbol">=B7</SPAN>TWO_PI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;=20
6.28318530</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: =
Symbol">=B7</SPAN>PI_BY_TWO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
1.57079633</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>DEG_TO_RAD 0.01745329</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>RAD_TO_DEG 57.2957795</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: =
Symbol">=B7</SPAN>SQRT2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
1.41421356</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275607></A><A=20
name=3D_Toc20180967>Vector Arithmetic</A></H3>
<P class=3DMsoNormal>LSL2 supports +, -, *, and %, with * defining the =
vector dot=20
product and % the vector cross product.&nbsp; Vectors may also be =
multiplied by=20
integers and floats to scale them, and rotations to rotate them.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275608></A><A=20
name=3D_Toc20180968>Rotation Arithmetic</A></H3>
<P class=3DMsoNormal>LSL2 supports +, -, and *.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275609></A><A=20
name=3D_Toc20180969>String Arithmetic</A></H3>
<P class=3DMsoNormal>LSL2 supports + for concatenation.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275610></A><A=20
name=3D_Toc20180970>Key Constant</A></H3>
<P class=3DMsoNormal>LSL2 supports one key constant which acts as an =
invalid=20
key:</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in; TEXT-INDENT: =
-0.25in"><SPAN=20
style=3D"FONT-FAMILY: Symbol">=B7</SPAN>NULL_KEY</P>
<H2 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275611></A><A=20
name=3D_Toc20180971>Library Function Calls</A></H2>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275612></A><A=20
name=3D_Toc20180972>llSin</A></H3>
<P class=3DMsoNormal>float llSin(float theta);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the sine of theta radians.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275613></A><A=20
name=3D_Toc20180973>llCos</A></H3>
<P class=3DMsoNormal>float llCos(float theta);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the cosine of theta radians.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275614></A><A=20
name=3D_Toc20180974>llTan</A></H3>
<P class=3DMsoNormal>float llTan(float theta);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the tangent of theta radians.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275615></A><A=20
name=3D_Toc20180975>llAtan2</A></H3>
<P class=3DMsoNormal>float llAtan2(float y, float x);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the arctangent2 of y, x.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275616></A><A=20
name=3D_Toc20180976>llSqrt</A></H3>
<P class=3DMsoNormal>float llSqrt(float val);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the square root of val.&nbsp; If val &lt; =
0.0 return=20
0.0 and raise a math runtime error.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275617></A><A=20
name=3D_Toc20180977>llPow</A></H3>
<P class=3DMsoNormal>float llSqrt(float base, float exp);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns base raised to exp.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275618></A><A=20
name=3D_Toc20180978>llAbs</A></H3>
<P class=3DMsoNormal>integer llAbs(integer val);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the absolute value of val.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275619></A><A=20
name=3D_Toc20180979>llFabs</A></H3>
<P class=3DMsoNormal>float llFabs(float val);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the absolute value of val.</P>
<P class=3DMsoNormal>&nbsp;</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275620></A><A=20
name=3D_Toc20180980>llFrand</A></H3>
<P class=3DMsoNormal>float llFrand(float mag);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns a pseudo-random number between [0, =
mag).</P>
<P class=3DMsoNormal>&nbsp;</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275621></A><A=20
name=3D_Toc20180981>llFloor</A></H3>
<P class=3DMsoNormal>integer llFloor(float val);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns largest integer value &lt;=3D val.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275622></A><A=20
name=3D_Toc20180982>llCeil</A></H3>
<P class=3DMsoNormal>integer llCeil(float val);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns largest integer value &gt;=3D val.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275623></A><A=20
name=3D_Toc20180983>llRound</A></H3>
<P class=3DMsoNormal>integer llRound(float val);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns val rounded to the nearest integer.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275624></A><A=20
name=3D_Toc20180984>llVecMag</A></H3>
<P class=3DMsoNormal>float llVecMag(vector vec);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the magnitude of vec.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275625></A><A=20
name=3D_Toc20180985>llVecNorm</A></H3>
<P class=3DMsoNormal>vector llVecNorm(vector vec);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns vec normalized.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275626></A><A=20
name=3D_Toc20180986>llVecDist</A></H3>
<P class=3DMsoNormal>float llVecDist(vector a, vector b);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the distance from a to b.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275627></A><A=20
name=3D_Toc20180987>llRot2Euler</A></H3>
<P class=3DMsoNormal>vector llRot2Euler(rotation rot);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the Euler Angle representation of rot.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275628></A><A=20
name=3D_Toc20180988>llEuler2Rot</A></H3>
<P class=3DMsoNormal>rotation llEuler2Rot (vector vec);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the rotation represented by Euler Angle =
vec.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275629></A><A=20
name=3D_Toc20180989>llAxes2Rot</A></H3>
<P class=3DMsoNormal>rotation llAxes2Rot (vector fwd, vector left, =
vector up);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the rotation represented by coordinate axes =
fwd,=20
left, and up.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275630></A><A=20
name=3D_Toc20180990>llRot2Fwd</A></H3>
<P class=3DMsoNormal>vector llRot2Fwd (rotation rot);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the forward axis represented by rot.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275631></A><A=20
name=3D_Toc20180991>llRot2Left</A></H3>
<P class=3DMsoNormal>vector llRot2Left (rotation rot);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the left axis represented by rot.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275632></A><A=20
name=3D_Toc20180992>llRot2Up</A></H3>
<P class=3DMsoNormal>vector llRot2Up (rotation rot);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the up axis represented by rot.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275633></A><A=20
name=3D_Toc20180993>llRotBetween</A></H3>
<P class=3DMsoNormal>rotation llRotBetween (vector a, vector b);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the rotation needed to rotate a to b.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275634></A><A=20
name=3D_Toc20180994>llWhisper</A></H3>
<P class=3DMsoNormal>llWhisper(integer channel, string text);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Whisper text on channel.&nbsp; Channel 0 is the =
public chat=20
channel that all avatars see as chat text.&nbsp; Channels 1 =96 =
2,147,483,648 are=20
private channels that aren=92t sent to avatars but other scripts can =
listen=20
for.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275635></A><A=20
name=3D_Toc20180995>llSay</A></H3>
<P class=3DMsoNormal>llSay(integer channel, string text);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Say text on channel.&nbsp; Channel 0 is the public =
chat=20
channel that all avatars see as chat text.&nbsp; Channels 1 =96 =
2,147,483,648 are=20
private channels that aren=92t sent to avatars but other scripts can =
listen=20
for.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275636></A><A=20
name=3D_Toc20180996>llShout</A></H3>
<P class=3DMsoNormal>llShout(integer channel, string text);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Shout text on channel.&nbsp; Channel 0 is the =
public chat=20
channel that all avatars see as chat text.&nbsp; Channels 1 =96 =
2,147,483,648 are=20
private channels that aren=92t sent to avatars but other scripts can =
listen=20
for.</P>
<P class=3DMsoNormal>&nbsp;</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275637></A><A=20
name=3D_Toc20180997>llListen</A></H3>
<P class=3DMsoNormal>integer llListen(integer channel, string name, key =
id, string=20
msg);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets a listen event callback for msg on channel =
from name=20
(name, id and/or msg can be empty) and returns an identifier that can be =
used to=20
deactivate or remove the listen.&nbsp; Channel 0 is the public chat =
channel that=20
all avatars see as chat text.&nbsp; Channels 1 =96 2,147,483,648 are =
private=20
channels that aren=92t sent to avatars but other scripts can listen =
for.</P>
<P class=3DMsoNormal>&nbsp;</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275638></A><A=20
name=3D_Toc20180998>llListenControl</A></H3>
<P class=3DMsoNormal>llListenControl(integer number, integer =
active);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Makes a listen event callback active or =
inactive.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275639></A><A=20
name=3D_Toc20180999>llListenRemove</A></H3>
<P class=3DMsoNormal>llListenRemove(integer number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Removes a listen event callback.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275640></A><A=20
name=3D_Toc20181000>llSensor</A></H3>
<P class=3DMsoNormal>llSensor(string name, key id, integer type, float =
range,=20
float arc);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Performs a single scan for name and id with type =
(AGENT,=20
ACTIVE, PASSIVE, and/or SCRIPTED) within range meters and arc radians of =
forward=20
vector (name and/or id can be empty or 0).&nbsp; A range of 0.0 does =
perform a=20
scan.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275641></A><A=20
name=3D_Toc20181001>llSensorRepeat</A></H3>
<P class=3DMsoNormal>llSensorRepeat(string name, key id, integer type, =
float=20
range, float arc, float rate);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets a callback for name and id with type (AGENT, =
ACTIVE,=20
PASSIVE, and/or SCRIPTED) within range meters and arc radians of forward =
vector=20
(name and/or id can be empty or 0) and repeats every rate seconds.&nbsp; =
Passing=20
a range of 0.0 cancels the sensor.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275642></A><A=20
name=3D_Toc20181002>llSensorRemove</A></H3>
<P class=3DMsoNormal>llSensorRemove();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Removes the sensor.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275643></A><A=20
name=3D_Toc20181003>llDetectedName</A></H3>
<P class=3DMsoNormal>string llDetectedName(integer number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the name of detected object number (returns =
empty=20
string if number is not valid sensed object).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275644></A><A=20
name=3D_Toc20181004>llDetectedKey</A></H3>
<P class=3DMsoNormal>key llDetectedKey(integer number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the key of detected object number (returns =
invalid=20
key if number is not valid sensed object).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275645></A><A=20
name=3D_Toc20181005>llDetectedOwner</A></H3>
<P class=3DMsoNormal>key llDetectedOwner(integer number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the key of detected object=92s owner number =
(returns=20
invalid key if number is not valid sensed object).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"> </H3>
<P class=3DMsoNormal>integer llDetectedType(integer number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the type (AGENT, ACTIVE, PASSIVE, SCRIPTED) =
of=20
detected object (returns 0 if number is not valid sensed object).&nbsp; =
Note=20
that the return value is a bit field, so comparisons need to be an AND =
check,=20
ie:</P>
<P class=3DMsoNormal>&nbsp;</P>
<P=20
class=3DMsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;=20
integer type =3D llDetectedType(0);</P>
<P=20
class=3DMsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;=20
if (type &amp; AGENT)</P>
<P=20
class=3DMsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;=20
{</P>
<P=20
class=3DMsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;=20
// do stuff</P>
<P=20
class=3DMsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;=20
}</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275646></A><A=20
name=3D_Toc20181007>llDetectedPos</A></H3>
<P class=3DMsoNormal>vector llDetectedPos(integer number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the position of detected object number =
(returns=20
&lt;0,0,0&gt; if number is not valid sensed object).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275647></A><A=20
name=3D_Toc20181008>llDetectedVel</A></H3>
<P class=3DMsoNormal>vector llDetectedVel(integer number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the velocity of detected object number =
(returns=20
&lt;0,0,0&gt; if number is not valid sensed object).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275648></A><A=20
name=3D_Toc20181009>llDetectedGrab</A></H3>
<P class=3DMsoNormal>vector llDetectedGrab(integer number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the grab offset of detected object number =
(returns=20
&lt;0,0,0&gt; if number is not valid sensed object).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275649></A><A=20
name=3D_Toc20181010>llDetectedRot</A></H3>
<P class=3DMsoNormal>rotation llDetectedRot(integer number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the rotation of detected object number =
(returns=20
&lt;0,0,0,1&gt; if number is not valid sensed object).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275650></A><A=20
name=3D_Toc20181011>llDetectedLinkNumber</A></H3>
<P class=3DMsoNormal>integer llDetectedLinkNumber(integer number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the link position (0 for a non-linked =
object, 1 for=20
the root of a linked object, 2 for the first child, &amp;c) of the =
triggered=20
event for touches.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275651></A><A=20
name=3D_Toc20181012>llDie</A></H3>
<P class=3DMsoNormal>llDie();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Delete the object that the script is attached =
to.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275652></A><A=20
name=3D_Toc20181013>llGround</A></H3>
<P class=3DMsoNormal>float llGround(vector offset);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the ground height at the object position +=20
offset.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275653></A><A=20
name=3D_Toc20181014>llCloud</A></H3>
<P class=3DMsoNormal>float llCloud(vector offset);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the cloud density at the object position +=20
offset.</P>
<P class=3DMsoNormal>&nbsp;</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275654></A><A=20
name=3D_Toc20181015>llWind</A></H3>
<P class=3DMsoNormal>vector llWind(vector offset);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the wind velocity below the object position =
+=20
offset.</P>
<P class=3DMsoNormal>&nbsp;</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275655></A><A=20
name=3D_Toc20181016>llSetStatus</A></H3>
<P class=3DMsoNormal>llSetStatus(integer status, integer value);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets status to value.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275656></A><A=20
name=3D_Toc20181017>llGetStatus</A></H3>
<P class=3DMsoNormal>integer llGetStatus(integer status);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets value of status.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275657></A><A=20
name=3D_Toc20181018>llSetScale</A></H3>
<P class=3DMsoNormal>llSetScale(vector scale);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the scale.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275658></A><A=20
name=3D_Toc20181019>llGetScale</A></H3>
<P class=3DMsoNormal>vector llGetScale(key name);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the scale.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275659></A><A=20
name=3D_Toc20181020>llSetColor</A></H3>
<P class=3DMsoNormal>llSetColor(vector color, integer face);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the color.&nbsp; If face =3D=3D ALL_SIDES, set =
the color to=20
all faces.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275660></A><A=20
name=3D_Toc20181021>llGetColor</A></H3>
<P class=3DMsoNormal>vector llGetColor(integer face);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the color.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275661></A><A=20
name=3D_Toc20181022>llSetAlpha</A></H3>
<P class=3DMsoNormal>llSetAlpha(float alpha, integer face);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the alpha.&nbsp; If face =3D=3D ALL_SIDES, set =
the alpha to=20
all faces.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275662></A><A=20
name=3D_Toc20181023>llGetAlpha</A></H3>
<P class=3DMsoNormal>float llGetAlpha(integer face);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the alpha.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275663></A><A=20
name=3D_Toc20181024>llSetTexture</A></H3>
<P class=3DMsoNormal>llSetTexture(string texture, integer face);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the texture from object inventory of =
face.&nbsp; If face=20
=3D=3D ALL_SIDES, set the texture to all faces.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275664></A><A=20
name=3D_Toc20181025>llGetTexture</A></H3>
<P class=3DMsoNormal>string llGetTexture(integer face);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the texture of face if in object =
inventory.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275665></A><A=20
name=3D_Toc20181026>llScaleTexture</A></H3>
<P class=3DMsoNormal>llScaleTexture(float scale_s, float scale_t, =
integer=20
face);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the texture s and t scales of face.&nbsp; If =
face =3D=3D=20
ALL_SIDES, scale the texture to all faces.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275666></A><A=20
name=3D_Toc20181027>llOffsetTexture</A></H3>
<P class=3DMsoNormal>llOffsetTexture(float offset_s, float offset_t, =
integer=20
face);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the texture s and t offsets of face.&nbsp; If =
face =3D=3D=20
ALL_SIDES, set the texture offsets for all faces.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275667></A><A=20
name=3D_Toc20181028>llRotateTexture</A></H3>
<P class=3DMsoNormal>llRotateTexture(float rot, integer face);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the texture rotation of face.&nbsp; If face =
=3D=3D=20
ALL_SIDES, rotate the texture of all faces.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc20181029></A><A=20
name=3D_Toc43275668>llSetTextureAnim</A></H3>
<P class=3DMsoNormal>llSetTextureAnim(integer mode, integer face, =
integer sizex,=20
integer sizey, float start, float length, float rate);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Animates a texture by setting the texture scale and =

offset.&nbsp; Mode is a mask, consisting of:</P>
<P class=3DMsoNormal>ANIM_ON =96 texture animation is on.</P>
<P class=3DMsoNormal>LOOP =96 loop the texture animation.</P>
<P class=3DMsoNormal>REVERSE =96 play animation in reverse =
direction.</P>
<P class=3DMsoNormal>PING_PONG =96 play animation going forwards, then=20
backwards.</P>
<P class=3DMsoNormal>SMOOTH =96 slide in the X direction, instead of =
playing=20
separate frames.</P>
<P class=3DMsoNormal>ROTATE =96 Animate texture rotation instead.</P>
<P class=3DMsoNormal>SCALE =96 Animate the texture scale instead.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Only ONE texture animation can be active at a =
time.&nbsp; You=20
can only do traditional animation, ROTATE, or SCALE at a time, you =
can=92t combine=20
masks.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>In the case of ROTATE or SCALE, sizex and sizey are =
ignored,=20
and start and length are used as the start and length values of the=20
animation.&nbsp; For rotation, start and length are in radians.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>face is which face to animate. If face =3D=3D =
ALL_SIDES, all=20
textures on the object are animated.&nbsp; You can only have one texture =

animation on an object, calling llSetTextureAnim more than once on an =
object=20
will reset it.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>sizex and sizey describe the layout of the frames =
within the=20
texture.&nbsp; sizex is how many horizontal frames, sizey is how many =
vertical=20
frames.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>start is the frame number to begin the animation =
on.&nbsp;=20
Frames are numbered from left to right, top to bottom, starting at =
0.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>length is the number of frames to animate. 0 means =
to animate=20
all frames after the start frame.</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>rate is the frame rate to animate at. 1.0 means 1 =
frame per=20
second, 10.0 means 10 frames/second.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275669>llSetPos</A></H3>
<P class=3DMsoNormal>llSetPos(vector pos);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the position (if the script isn't =
physical).&nbsp; If=20
the object is a child, the position is treated as root relative and the =
linked=20
set is adjusted.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275670></A><A=20
name=3D_Toc20181030>llGetPos</A></H3>
<P class=3DMsoNormal>vector llGetPos();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the position.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275671></A><A=20
name=3D_Toc20181031>llGetLocalPos</A></H3>
<P class=3DMsoNormal>vector llGetLocalPos();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the local position of a child object.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275672></A><A=20
name=3D_Toc20181032>llSetRot</A></H3>
<P class=3DMsoNormal>llSetRot(rotation rot);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the rotation (if the script isn't =
physical).&nbsp; If=20
the object is a child, the rotation is treated as root relative and the =
linked=20
set is adjusted.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275673></A><A=20
name=3D_Toc20181033>llGetRot</A></H3>
<P class=3DMsoNormal>rotation llGetRot();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the rotation.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275674></A><A=20
name=3D_Toc20181034>llGetLocalRot</A></H3>
<P class=3DMsoNormal>rotation llGetLocalRot();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the local rotation of a child object.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275675></A><A=20
name=3D_Toc20181035>llSetText</A></H3>
<P class=3DMsoNormal>llSetText(string text, vector color, float =
alpha)</P>
<P class=3DMsoNormal>Sets text that floats above object to text, using =
specified=20
color and alpha.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275676></A><A=20
name=3D_Toc20181036>llSetForce</A></H3>
<P class=3DMsoNormal>llSetForce(vector force, integer local);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the force, in local coordinates if local =
=3D=3D TRUE (if the=20
script is physical).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275677></A><A=20
name=3D_Toc20181037>llGetForce</A></H3>
<P class=3DMsoNormal>vector llGetForce();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the force (if the script is physical).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275678></A><A=20
name=3D_Toc20181038>llTarget</A></H3>
<P class=3DMsoNormal>integer llTarget(vector position, float range);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Set positions within range of position as a target =
and return=20
an ID for the target.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275679></A><A=20
name=3D_Toc20181039>llTargetRemove</A></H3>
<P class=3DMsoNormal>llTargetRemove(integer tnumber);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Remove target number tnumber.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275680></A><A=20
name=3D_Toc20181040>llRotTarget</A></H3>
<P class=3DMsoNormal>integer llRotTarget(rotation rotation, float =
error);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Set rotations within error of rotation as a =
rotational target=20
and return an ID for the target.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275681></A><A=20
name=3D_Toc20181041>llRotTargetRemove</A></H3>
<P class=3DMsoNormal>llRotTargetRemove(integer tnumber);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Remove rotational target number tnumber.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275682></A><A=20
name=3D_Toc20181042>llMoveToTarget</A></H3>
<P class=3DMsoNormal>llMoveToTarget(vector target, float tau);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Critically damp to target in tau seconds (if the =
script is=20
physical).&nbsp; Good tau values are greater than 0.2.&nbsp; A tau of =
0.0 stops=20
the critical damping.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275683></A><A=20
name=3D_Toc20181043>llStopMoveToTarget</A></H3>
<P class=3DMsoNormal>llMoveToTarget();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Stops critically damped motion.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275684></A><A=20
name=3D_Toc20181044>llApplyImpulse</A></H3>
<P class=3DMsoNormal>llApplyImpulse(vector force, integer local);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Applies the impulse, in local coordinates if local =
=3D=3D TRUE=20
(if the script is physical).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275685></A><A=20
name=3D_Toc20181045>llApplyRotationalImpulse</A></H3>
<P class=3DMsoNormal>llApplyRotationalImpulse(vector force, integer =
local);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Applies the rotational impulse, in local =
coordinates if local=20
=3D=3D TRUE (if the script is physical).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275686></A><A=20
name=3D_Toc20181046>llSetTorque</A></H3>
<P class=3DMsoNormal>llSetTorque(vector torque, integer local);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the torque, in local coordinates if local =
=3D=3D TRUE (if=20
the script is physical).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275687></A><A=20
name=3D_Toc20181047>llGetTorque</A></H3>
<P class=3DMsoNormal>vector llGetTorque();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the torque (if the script is physical).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275688></A><A=20
name=3D_Toc20181048>llSetForceAndTorque</A></H3>
<P class=3DMsoNormal>llSetForceAndTorque(vector force, vector torque, =
integer=20
local);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the force and torque, in local coordinates if =
local =3D=3D=20
TRUE (if the script is physical).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275689></A><A=20
name=3D_Toc20181049>llGetVel</A></H3>
<P class=3DMsoNormal>vector llGetVel();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the velocity.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275690></A><A=20
name=3D_Toc20181050>llGetAccel</A></H3>
<P class=3DMsoNormal>vector llGetAccel();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the acceleration.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275691></A><A=20
name=3D_Toc20181051>llGetOmega</A></H3>
<P class=3DMsoNormal>vector llGetOmega();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the omega.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275692></A><A=20
name=3D_Toc20181052>llGetTimeOfDay</A></H3>
<P class=3DMsoNormal>float llGetTimeOfDay();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the time in seconds since LindenWorld =
midnight.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275693></A><A=20
name=3D_Toc20181053>llGetWallclock</A></H3>
<P class=3DMsoNormal>float llGetWallclock();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the time in seconds since simulator timezone=20
midnight.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275694></A><A=20
name=3D_Toc20181054>llGetTime</A></H3>
<P class=3DMsoNormal>float llGetTime();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the time in seconds since creation.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275695></A><A=20
name=3D_Toc20181055>llResetTime</A></H3>
<P class=3DMsoNormal>llResetTime();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the time to zero.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275696></A><A=20
name=3D_Toc20181056>llGetAndResetTime</A></H3>
<P class=3DMsoNormal>float llGetAndResetTime();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the time in seconds since creation and sets =
the time to=20
zero.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275697></A><A=20
name=3D_Toc20181057>llPlaySound</A></H3>
<P class=3DMsoNormal>llPlaySound(key sound, float volume);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Plays a sound once, attached to an object (the =
sound follows=20
object movement). Only one sound may be attached to an object currently, =
and=20
attaching a new sound (or calling llStopSound will stop the previously =
attached=20
sound.&nbsp; A second call to llPlaySound with the same key will not =
restart the=20
sound, but the new volume will be used, which allows control over the =
volume of=20
already playing sounds.&nbsp; To restart the sound from the beginning, =
call=20
llStopSound() before calling llPlaySound() again.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275698></A><A=20
name=3D_Toc20181058>llLoopSound</A></H3>
<P class=3DMsoNormal>llLoopSound(key sound, float volume);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Similar to llPlaySound, llLoopSound plays a sound =
attached to=20
an object, but will continuously loop that sound until llStopSound() or=20
llPlaySound() is called. Only one sound may be attached to an object =
currently,=20
and a second call to llLoopSound with the same key will not restart the =
sound,=20
but the new volume will be used, which allows control over the volume of =
already=20
playing sounds.&nbsp; Setting the volume to 0 is not the same as calling =

llStopSound; a sound with 0 volume will continue to loop.&nbsp; To =
restart the=20
sound from the beginning, call llStopSound() before calling =
llLoopSound()=20
again.</P>
<P class=3DMsoNormal>&nbsp;</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc20181060></A><A=20
name=3D_Toc43275699></A><A name=3D_Toc20181059>llTriggerSound</A></H3>
<P class=3DMsoNormal>llTriggerSound(key sound, float volume);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Plays a transient sound NOT attached to an object =
(the sound=20
plays from a stationary position located at the center of the object at =
the time=20
of the trigger.) There is no limit to the number of llTrigger sounds =
which can=20
be generated by an object, and calling llTriggerSound does not affect =
the=20
attached sounds created by llPlaySound and llLoopSound.&nbsp; This is =
very=20
useful for things like collision noises, explosions, etc.&nbsp; There is =
no way=20
to stop or alter the volume of a sound triggered by =
llTriggerSound.&nbsp; </P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275700>llTriggerSoundLimited</A></H3>
<P class=3DMsoNormal>llTriggerSoundLimited(string sound, float volume, =
vector tne,=20
vector bsw);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Plays a transient sound NOT attached to an object =
(the sound=20
plays from a stationary position located at the center of the object at =
the time=20
of the trigger) with its audible range limited by the axis aligned =
bounding box=20
defined by tne (top-north-east) and bsw (bottom-south-west) =
corners.&nbsp; There=20
is no limit to the number of llTrigger sounds which can be generated by =
an=20
object, and calling llTriggerSound does not affect the attached sounds =
created=20
by llPlaySound and llLoopSound.&nbsp; This is very useful for things =
like=20
collision noises, explosions, etc.&nbsp; There is no way to stop or =
alter the=20
volume of a sound triggered by llTriggerSound.&nbsp; </P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275701>llStopSound</A></H3>
<P class=3DMsoNormal>llStopSound();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Stops a currently playing attached sound (started =
with=20
llPlaySound or llLoopSound).&nbsp; Has no effect on sounds started with=20
llTriggerSound&nbsp; </P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275702></A><A=20
name=3D_Toc20181061>llPreloadSound</A></H3>
<P class=3DMsoNormal>llPreloadSound(string sound);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Preloads sound from object inventory on =
viewers.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275703>llAdjustSoundVolume</A></H3>
<P class=3DMsoNormal>llAdjustSoundVolume(float volume);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Adjusts the volume of the currently playing =
attached sound=20
(started with llPlaySound or llLoopSound).&nbsp; Has no effect on sounds =
started=20
with llTriggerSound.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275704>llSetSoundQueueing</A></H3>
<P class=3DMsoNormal>llSetSoundQueueing(integer queue);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets whether successive calls to llPlaySound, =
llLoopSound=20
etc. attached sounds only) interrupt the playing sound (FALSE, the =
default=20
behavior) or wait until the current playing sound reaches its end =
(TRUE).&nbsp;=20
The queue is one level deep.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275705>llLoopSoundMaster</A></H3>
<P class=3DMsoNormal>llLoopSoundMaster(key sound, float volume);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Behaviour is identical to llLoopSound, with the =
addition of=20
marking the source as a =93Sync Master=94, causing =93Slave=94 sounds to =
sync to=20
it.&nbsp; If there are multiple masters within a viewer=92s interest =
area, the=20
most audible one (a function of both distance and volume) will win out =
as the=20
master.&nbsp; However, the use of multiple masters within a small area =
is=20
unlikely to produce the desired effect.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275706>llLoopSoundSlave</A></H3>
<P class=3DMsoNormal>llLoopSoundSlave(key sound, float volume);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Behaviour is identical to llLoopSound, unless there =
is a=20
=93Sync Master=94 present.&nbsp; If a Sync Master is already playing the =
Slave sound=20
will begin playing from the same point the master is in its loop =
(syncronizing=20
the loop points of both sounds).&nbsp; If a Master is started when the =
Slave is=20
already playing, the Slave will skip to the correct position to sync =
with the=20
Master.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275707>llPlaySoundSlave</A></H3>
<P class=3DMsoNormal>llPlaySoundSlave(key sound, float volume);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Behaviour is identical to llPlaySound, unless there =
is a=20
=93Sync Master=94 present.&nbsp; If a Sync Master is already playing the =
Slave sound=20
will not be played until the Master hits its loop point and returns to =
the=20
beginning.&nbsp; llPlaySoundSlave will play the sound exactly once; if =
it is=20
desired to have the sound play every time the Master loops, either use=20
llLoopSoundSlave with extra silence padded on the end of the sound or =
ensure=20
that llPlaySoundSlave is called at least once per loop of the =
Master.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275708></A><A=20
name=3D_Toc20181064>llGetSubString</A></H3>
<P class=3DMsoNormal>string llGetSubString(string src, integer start, =
integer=20
end);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the indicated substring.&nbsp; Start and =
end are=20
inclusive, so 0, length =96 1 would capture the entire string and 0,0 =
would=20
capture the first character.&nbsp; Using negative numbers for start =
and/or end=20
causes the index to count backwards from the length of the string, so =
0,-1 would=20
capture the entire string.&nbsp; If start is larger than end the sub =
string is=20
the exclusion of the entries, so 6,4 would give the entire string except =
for the=20
5<SUP>th</SUP> character.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275709></A><A=20
name=3D_Toc20181065>llDeleteSubString</A></H3>
<P class=3DMsoNormal>string llDeleteSubString(string src, integer start, =
integer=20
end);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Removes the indicated substring and returns the =
result.&nbsp;=20
Start and end are inclusive, so 0, length =96 1 would delete the entire =
string and=20
0,0 would delete the first character.&nbsp; Using negative numbers for =
start=20
and/or end causes the index to count backwards from the length of the =
string, so=20
0,-1 would delete the entire string.&nbsp; If start is larger than end =
the sub=20
string is the exclusion of the entries, so 6,4 would delete the entire =
string=20
except for the 5<SUP>th</SUP> character.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275710></A><A=20
name=3D_Toc20181066>llInsertString</A></H3>
<P class=3DMsoNormal>string llInsertString(string dst, integer position, =
string=20
src);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Inserts src into dst at position and returns the =
result.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275711></A><A=20
name=3D_Toc20181067>llToUpper</A></H3>
<P class=3DMsoNormal>string llToUpper(string src);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Converts src to all upper case and returns the =
result.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275712></A><A=20
name=3D_Toc20181068>llToLower</A></H3>
<P class=3DMsoNormal>string llToLower(string src);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Converts src to all lower case and returns the =
result.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275713></A><A=20
name=3D_Toc20181069>llStringLength</A></H3>
<P class=3DMsoNormal>integer llStringLength(string src);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the number of characters in the src.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275714></A><A=20
name=3D_Toc20181070>llGiveMoney</A></H3>
<P class=3DMsoNormal>llGiveMoney(key destination, integer amount);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Transfer amount of money from script owner to=20
destination.&nbsp; Requires the PERMISSION_DEBIT runtime permission.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275715></A><A=20
name=3D_Toc20181071>llMakeExplosion</A></H3>
<P class=3DMsoNormal>llMakeExplosion(integer particles, float scale, =
float=20
velocity, float lifetime, float arc, string texture, vector offset);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Make a round explosion of particles using texture =
from the=20
object=92s inventory.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275716></A><A=20
name=3D_Toc20181072>llMakeFountain</A></H3>
<P class=3DMsoNormal>llMakeFountain(integer particles, float scale, =
float=20
velocity, float lifetime, float arc, integer bounce, string texture, =
vector=20
offset, float bounce_offset);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Make a fountain of particles using texture from the =
object=92s=20
inventory.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275717></A><A=20
name=3D_Toc20181073>llMakeSmoke</A></H3>
<P class=3DMsoNormal>llMakeSmoke(integer particles, float scale, float =
velocity,=20
float lifetime, float arc, string texture, vector offset);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Make smoky particles using texture from the =
object=92s=20
inventory.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275718></A><A=20
name=3D_Toc20181074>llMakeFire</A></H3>
<P class=3DMsoNormal>llMakeFire(integer particles, float scale, float =
velocity,=20
float lifetime, float arc, string texture, vector offset);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Make fire particles using texture from the =
object=92s=20
inventory.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275719></A><A=20
name=3D_Toc20181075>llRezObject</A></H3>
<P class=3DMsoNormal>llRezObject(string inventory, vector pos, vector =
vel,=20
rotation rot, integer param);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Creates object=92s inventory object at position pos =
with=20
velocity vel and rotation rot.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275720></A><A=20
name=3D_Toc20181076>llSetTimerEvent</A></H3>
<P class=3DMsoNormal>llSetTimerEvent(float sec);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Triggers a timer event every sec seconds.&nbsp; =
Passing in=20
0.0 seconds stops further timer events.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275721></A><A=20
name=3D_Toc20181077>llSleep</A></H3>
<P class=3DMsoNormal>llSleep(float sec);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Puts script to sleep for sec seconds.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275722></A><A=20
name=3D_Toc20181078>llLookAt</A></H3>
<P class=3DMsoNormal>llLookAt(vector target, F32 strength, F32 =
damping);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Cause object name to point it's forward axis =
towards=20
target.&nbsp; Good strength values are around =BD the mass of the object =
and good=20
damping values are less than 1/10<SUP>th</SUP> of the strength.&nbsp;=20
Asymmetrical shapes require smaller damping.&nbsp; Strength of 0.0 =
cancels the=20
look at.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275723></A><A=20
name=3D_Toc20181079>llRotLookAt</A></H3>
<P class=3DMsoNormal>llLookAt(rotation rot, F32 tau, F32 strength);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Cause object name to rotate to rot.&nbsp; Good =
strength=20
values are around =BD the mass of the object and good damping values are =
less than=20
1/10<SUP>th</SUP> of the strength.&nbsp; Asymmetrical shapes require =
smaller=20
damping.&nbsp;&nbsp; Strength of 0.0 cancels the look at.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275724></A><A=20
name=3D_Toc20181080>llStopLookAt</A></H3>
<P class=3DMsoNormal>llStopLookAt();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Stop causing object name to point at a target.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275725></A><A=20
name=3D_Toc20181081>llCollisionFilter</A></H3>
<P class=3DMsoNormal>llCollisionFilter(string name, key id, integer =
accept);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>If accept =3D=3D TRUE, only accept collisions with =
objects name=20
and id (either is optional), otherwise with objects not name or id.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275726></A><A=20
name=3D_Toc20181082>llTakeControls</A></H3>
<P class=3DMsoNormal>llTakeControls(integer controls, integer accept, =
integer=20
pass_on);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>If (accept =3D=3D (controls &amp; input)), send =
input to=20
object.&nbsp; If pass_on send to avatar also.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275727></A><A=20
name=3D_Toc20181083>llReleaseControls</A></H3>
<P class=3DMsoNormal>llReleaseControls(key avatar);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Stop taking inputs from avatar.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275728></A><A=20
name=3D_Toc20181084>llAttachToAvatar</A></H3>
<P class=3DMsoNormal>llAttachToAvatar(key avatar, integer =
attachment);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Attach to avatar at point attachment.&nbsp; =
Requires the=20
PERMISSION_ATTACH runtime permission.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275729></A><A=20
name=3D_Toc20181085>llDetachFromAvatar</A></H3>
<P class=3DMsoNormal>llDetachFromAvatar(key avatar);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Drop off of avatar.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275730></A><A=20
name=3D_Toc20181086>llGetOwner</A></H3>
<P class=3DMsoNormal>key llGetOwner();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the owner of the object.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275731></A><A=20
name=3D_Toc20181087>llInstantMessage</A></H3>
<P class=3DMsoNormal>llInstantMessage(key user, string message);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>IMs message to the user.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275732></A><A=20
name=3D_Toc20181088>llEmail</A></H3>
<P class=3DMsoNormal>llEmail(string address, string subject, string =
message);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sends email to address with subject and =
message.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275733></A><A=20
name=3D_Toc20181089>llGetNextEmail</A></H3>
<P class=3DMsoNormal>llGetNextEmail(string address, string subject);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Get the next waiting email with appropriate address =
and/or=20
subject (if blank they are ignored).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275734></A><A=20
name=3D_Toc20181090>llGetKey</A></H3>
<P class=3DMsoNormal>key llGetKey();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Get the key for the object the script is attached =
to.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275735></A><A=20
name=3D_Toc20181091>llSetBuoyancy</A></H3>
<P class=3DMsoNormal>llSetBuoyancy(float buoyancy);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Set the objects buoyancy (0 is none, &lt; 1.0 =
sinks, 1.0=20
floats, &gt; 1.0 rises).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275736></A><A=20
name=3D_Toc20181092>llSetHoverHeight</A></H3>
<P class=3DMsoNormal>llSetHoverHeight(float height, integer water, float =
tau);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Critically damps to a height (either above ground =
or above=20
ground and water if water =3D=3D TRUE).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275737></A><A=20
name=3D_Toc20181093>llStopHover</A></H3>
<P class=3DMsoNormal>llStopHover();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Stop hovering to a height.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275738></A><A=20
name=3D_Toc20181094>llMinEventDelay</A></H3>
<P class=3DMsoNormal>llMinEventDelay(float delay);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Set the minimum time between events being =
handled.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275739></A><A=20
name=3D_Toc20181095>llStartAnimation</A></H3>
<P class=3DMsoNormal>llStartAnimation(string anim);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Start animation anim for avatar that owns =
object.&nbsp; The=20
following strings are used:</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>=93hold_R_bazooka=94, =
=93hold_R_handgun=94,=94hold_R_rifle=94</P>
<P class=3DMsoNormal>Holds the appropriately shaped weapon in the right=20
hand.&nbsp; Automatically switches to the aims (below) when user enters =
mouse=20
look</P>
<P class=3DMsoNormal>&nbsp;=93aim_R_bazooka=94, =93aim_R_handgun=94, =
=93aim_R_rifle=94</P>
<P class=3DMsoNormal>Aims the appropriately shaped weapon along the =
direction the=20
avatar is looking</P>
<P class=3DMsoNormal>=93away=94</P>
<P class=3DMsoNormal>Flops over in "away from keyboard" state</P>
<P class=3DMsoNormal>=93backflip=94</P>
<P class=3DMsoNormal>Performs a backflip</P>
<P class=3DMsoNormal>=93bow=94</P>
<P class=3DMsoNormal>Bows at waist</P>
<P class=3DMsoNormal>=93brush=94</P>
<P class=3DMsoNormal>Brushes dirt from shirt</P>
<P class=3DMsoNormal>=93clap=94</P>
<P class=3DMsoNormal>Applauds</P>
<P class=3DMsoNormal>=93courtbow=94</P>
<P class=3DMsoNormal>Bows with a courtly flourish</P>
<P class=3DMsoNormal>=93crouch=94</P>
<P class=3DMsoNormal>Crouches in place</P>
<P class=3DMsoNormal>=93crouchwalk=94</P>
<P class=3DMsoNormal>Walks in place while crouching</P>
<P class=3DMsoNormal>=93dance1=94, =93dance2=94, =93dance3=94, =
=93dance4=94, =93dance5=94, =93dance6=94,=20
=93dance7=94, =93dance8=94</P>
<P class=3DMsoNormal>Various dance maneuvers</P>
<P class=3DMsoNormal>=93falldown=94</P>
<P class=3DMsoNormal>Freefall falling animation</P>
<P class=3DMsoNormal>=93female_walk=94</P>
<P class=3DMsoNormal>Walks with hip sway</P>
<P class=3DMsoNormal>=93fly=94</P>
<P class=3DMsoNormal>Flies forward</P>
<P class=3DMsoNormal>=93flyslow=94</P>
<P class=3DMsoNormal>Flies forward at a less agressive angle</P>
<P class=3DMsoNormal>=93hello=94</P>
<P class=3DMsoNormal>Waves</P>
<P class=3DMsoNormal>=93hold_throw_R=94</P>
<P class=3DMsoNormal>Hold object in right hand, prepared to throw it</P>
<P class=3DMsoNormal>=93hover=94</P>
<P class=3DMsoNormal>Hovers in place</P>
<P class=3DMsoNormal>=93hover_down=94</P>
<P class=3DMsoNormal>Pretends to hover straight down</P>
<P class=3DMsoNormal>=93hover_up=94</P>
<P class=3DMsoNormal>Pretends to hover straight up</P>
<P class=3DMsoNormal>=93jump=94</P>
<P class=3DMsoNormal>Midair jump position</P>
<P class=3DMsoNormal>=93kick_roundhouse_R=94</P>
<P class=3DMsoNormal>Roundhouse kick with right leg</P>
<P class=3DMsoNormal>=93land=94</P>
<P class=3DMsoNormal>Lands after flying</P>
<P class=3DMsoNormal>=93prejump=94</P>
<P class=3DMsoNormal>Prepares to jump</P>
<P class=3DMsoNormal>=93punch_L=94</P>
<P class=3DMsoNormal>Punch with left hand</P>
<P class=3DMsoNormal>=93punch_R=94</P>
<P class=3DMsoNormal>Punch with right hand</P>
<P class=3DMsoNormal>=93punch_onetwo=94</P>
<P class=3DMsoNormal>Punch with one hand then the other</P>
<P class=3DMsoNormal>=93run=94</P>
<P class=3DMsoNormal>Runs in place</P>
<P class=3DMsoNormal>=93salute=94</P>
<P class=3DMsoNormal>Salutes with right hand</P>
<P class=3DMsoNormal>=93sit=94</P>
<P class=3DMsoNormal>Sits on object at knee height</P>
<P class=3DMsoNormal>=93sit_ground=94</P>
<P class=3DMsoNormal>Sits down on ground</P>
<P class=3DMsoNormal>=93slowwalk=94</P>
<P class=3DMsoNormal>Walks in place slowly</P>
<P class=3DMsoNormal>=93smoke_idle=94</P>
<P class=3DMsoNormal>Leans on imaginary prop while holding cigarette</P>
<P class=3DMsoNormal>=93smoke_inhale=94</P>
<P class=3DMsoNormal>Leans on imaginary prop and smokes a cigarette</P>
<P class=3DMsoNormal>=93smoke_throw_down=94</P>
<P class=3DMsoNormal>Leans on imaginary prop, throws down a cigarette, =
and stamps=20
it out</P>
<P class=3DMsoNormal>=93snapshot=94</P>
<P class=3DMsoNormal>Pantomimes taking a picture</P>
<P class=3DMsoNormal>=93soft_land=94</P>
<P class=3DMsoNormal>Stumbles a bit as if landing</P>
<P class=3DMsoNormal>=93stand=94</P>
<P class=3DMsoNormal>Stands in place</P>
<P class=3DMsoNormal>=93standup=94</P>
<P class=3DMsoNormal>Falls on face and stands up</P>
<P class=3DMsoNormal>=93stride=94</P>
<P class=3DMsoNormal>Legs extended as if stepping off of a ledge</P>
<P class=3DMsoNormal>=93sword_strike_R=94</P>
<P class=3DMsoNormal>Strike with sword in right hand</P>
<P class=3DMsoNormal>=93talk=94</P>
<P class=3DMsoNormal>Head moves as if talking</P>
<P class=3DMsoNormal>=93target=94</P>
<P class=3DMsoNormal>Right arm points where avatar is looking (used =
automatically=20
with aim anims)</P>
<P class=3DMsoNormal>=93throw_R=94</P>
<P class=3DMsoNormal>Throws object in right hand</P>
<P class=3DMsoNormal>=93tryon_shirt=94</P>
<P class=3DMsoNormal>Turns around and models a new shirt</P>
<P class=3DMsoNormal>=93turnleft=94</P>
<P class=3DMsoNormal>Pretends to turn left</P>
<P class=3DMsoNormal>=93turnright=94</P>
<P class=3DMsoNormal>Pretends to turn right</P>
<P class=3DMsoNormal>=93type=94</P>
<P class=3DMsoNormal>Makes typing motion</P>
<P class=3DMsoNormal>=93uphillwalk=94</P>
<P class=3DMsoNormal>Walks uphill in place</P>
<P class=3DMsoNormal>=93walk=94</P>
<P class=3DMsoNormal>Walks in place</P>
<P class=3DMsoNormal>=93whisper=94</P>
<P class=3DMsoNormal>Whispers behind hand</P>
<P class=3DMsoNormal>=93whistle=94</P>
<P class=3DMsoNormal>Whistles with hands in mouth</P>
<P class=3DMsoNormal>=93yell=94</P>
<P class=3DMsoNormal>Shouts between cupped hands</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275740></A><A=20
name=3D_Toc20181096>llStopAnimation</A></H3>
<P class=3DMsoNormal>llStopAnimation(string anim);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Stop animation anim for avatar that owns =
object.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275741></A><A=20
name=3D_Toc20181097>llPointAt</A></H3>
<P class=3DMsoNormal>llPointAt(vector pos);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Make avatar that owns object point at pos.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275742></A><A=20
name=3D_Toc20181098>llStopPointAt</A></H3>
<P class=3DMsoNormal>llStopPointAt();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Stop avatar that owns object pointing.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275743></A><A=20
name=3D_Toc20181099>llTargetOmega</A></H3>
<P class=3DMsoNormal>llTargetOmega(vector axis, float spinrate, float =
gain);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Attempt to spin at spinrate with strength =
gain.&nbsp; A gain=20
of 0.0 cancels the spin.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275744></A><A=20
name=3D_Toc20181100>llGetStartParameter</A></H3>
<P class=3DMsoNormal>integer llGetStartParameter();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Get the start parameter passed to llRezObject.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275745></A><A=20
name=3D_Toc20181101>llRequestPermissions</A> </H3>
<P class=3DMsoNormal>integer llRequestPermissions(key avatar, integer =
perm);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Ask avatar to allow the script to do perm (NB: =
Debit,=20
ownership, link, joint, and permission requests can only go to the =
object's=20
owner).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc20181104></A><A=20
name=3D_Toc43275746></A><A name=3D_Toc20209454></A><A=20
name=3D_Toc20181102>llGetPermissionsKey</A></H3>
<P class=3DMsoNormal>key llGetPermissionsKey()</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Return avatar that permissions are enabled =
for.&nbsp;=20
NULL_KEY if not enabled.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275747></A><A=20
name=3D_Toc20209455></A><A name=3D_Toc20181103>llGetPermissions</A></H3>
<P class=3DMsoNormal>integer llGetPermissions();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Return what permissions have been enabled.&nbsp; To =
use:</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>integer perm =3D llGetPermissions();</P>
<P class=3DMsoNormal>if ((perm &amp; PERMISSION_DEBIT) =3D=3D =
PERMISSION_DEBIT)</P>
<P class=3DMsoNormal>{</P>
<P=20
class=3DMsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;=20
// code goes here</P>
<P class=3DMsoNormal>}</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275748>llGetLinkNumber</A></H3>
<P class=3DMsoNormal>integer llGetPermissions();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns what number in a link set the script is =
attached to=20
(0 means no link, 1 the root, 2 for first child, &amp;c.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275749></A><A=20
name=3D_Toc20181105>llSetLinkColor</A></H3>
<P class=3DMsoNormal>llSetLinkColor(integer linknumber, vector color, =
integer=20
face);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns what number in a link set the script is =
attached to=20
(0 means no link, 1 the root, 2 for first child, &amp;c.).&nbsp; If face =
=3D=3D=20
ALL_SIDES, set the color for all faces.&nbsp; If linknumber =3D=3D =
ALL_SIDES, set=20
color on all objects in link set.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275750></A><A=20
name=3D_Toc20181106>llCreateLink</A></H3>
<P class=3DMsoNormal>llCreateLink(key target, integer parent);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Attempt to link object script is attached to and =
target=20
(requires permission PERMISSION_CHANGE_LINKS be set). If parent =3D=3D =
TRUE, object=20
script is attached to is the root.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275751></A><A=20
name=3D_Toc20181107>llBreakLink</A></H3>
<P class=3DMsoNormal>llBreakLink(integer linknum);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Delinks the object with the given link number =
(requires=20
permission PERMISSION_CHANGE_LINKS be set).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275752></A><A=20
name=3D_Toc20181108>llBreakAllLinks</A></H3>
<P class=3DMsoNormal>llBreakAllLinks();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Delinks all objects in the link set (requires =
permission=20
PERMISSION_CHANGE_LINKS be set).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275753></A><A=20
name=3D_Toc20181109>llGetLinkKey</A></H3>
<P class=3DMsoNormal>key llGetLinkKey(integer linknum);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Get the key of linknumber in link set.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275754></A><A=20
name=3D_Toc20181110>llGetLinkName</A></H3>
<P class=3DMsoNormal>string llGetLinkName(integer linknum);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Get the name of linknumber in link set.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275755></A><A=20
name=3D_Toc20181111>llGetInventoryNumber</A></H3>
<P class=3DMsoNormal>integer llGetInventoryNumber(integer type);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal style=3D"MARGIN-LEFT: 0.5in">Get the number of =
items of type=20
(INVENTORY_TEXTURE, INVENTORY_SOUND, INVENTORY_OBJECT, INVENTORY_SCRIPT, =

INVENTORY_LANDMARK, INVENTORY_CLOTHING, INVENTORY_NOTECARD, or=20
INVENTORY_BODYPART) in the object's inventory.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275756></A><A=20
name=3D_Toc20181112>llGetInventoryName</A></H3>
<P class=3DMsoNormal>string llGetInventoryName(integer type, integer =
number);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Get the name of the inventory item number of =
type.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275757></A><A=20
name=3D_Toc20181113>llGiveInventory</A></H3>
<P class=3DMsoNormal>llGiveInventory(key destination, string =
inventory);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Give the named inventory item to the keyed avatar =
or object=20
in the same simulator as the giver. If the recipient is an avatar, the =
avatar=20
then follows the normal procedure of accepting or denying the =
offer.&nbsp; If=20
the recipient is an object, the same permissions apply as if you were =
dragging=20
inventory onto the object by hand, ie if llAllowInventoryDrop(TRUE) has =
been=20
called on the object, any other object can pass objects to its =
inventory.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275758></A><A=20
name=3D_Toc20181114>llRemoveInventory</A></H3>
<P class=3DMsoNormal>llRemoveInventory(string inventory);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Remove the named inventory item from the object=20
inventory.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275759></A><A=20
name=3D_Toc20181115>llSetScriptState</A></H3>
<P class=3DMsoNormal>llSetScriptState(string name, integer run);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Control the state of a script on the object.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275760></A><A=20
name=3D_Toc20181116>llGetEnergy</A></H3>
<P class=3DMsoNormal>float llGetEnergy();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns how much energy is in the object as a =
percentage of=20
maximum.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275761></A><A=20
name=3D_Toc20181119>llSetText</A></H3>
<P class=3DMsoNormal>llSetText(string text, vector color, float =
alpha);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Set text floating over object.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275762></A><A=20
name=3D_Toc20181120>llSetText</A></H3>
<P class=3DMsoNormal>llSetText(string text, vector color, float =
alpha);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Set text floating over object.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc20181122></A><A=20
name=3D_Toc43275763></A><A name=3D_Toc20181121>llPassTouches</A></H3>
<P class=3DMsoNormal>llPassTouches(integer pass);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>If pass =3D=3D TRUE, touches are passed from =
children on to=20
parents.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275764>llPassCollisions</A></H3>
<P class=3DMsoNormal>llPassCollisions(integer pass);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>If pass =3D=3D TRUE, collisions (both land and =
object) are passed=20
from children on to parents.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275765>llRequestAgentData</A></H3>
<P class=3DMsoNormal>key llRequestAgentData(key id, integer data);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Requests data about agent id.&nbsp; When data is =
available=20
the dataserver event will be raised.&nbsp; The only request currently=20
implemented is request 1, which returns a =931=94 if the agent is =
online, =930=94=20
otherwise.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275766></A><A=20
name=3D_Toc20181123>llRequestInventoryData</A></H3>
<P class=3DMsoNormal>key llRequestInventoryData(string name);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Requests data from object's inventory object.&nbsp; =
When data=20
is available the dataserver event will be raised.&nbsp; The only request =

currently implemented is to request data from landmarks, where the data =
returned=20
is in the form =93&lt;float, float, float&gt;=94 which can be cast to a=20
vector.&nbsp; This position is in region local coordinates.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275767></A><A=20
name=3D_Toc20181124>llSetDamage</A></H3>
<P class=3DMsoNormal>llSetDamage(float damage);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the amount of damage that will be done to an =
object that=20
this object hits.&nbsp; Object will be killed.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275768></A><A=20
name=3D_Toc20181125>llTeleportAgent</A>Home</H3>
<P class=3DMsoNormal>llTeleportAgentHome(key id);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Teleport agent on the owner's land to agent=92s =
home=20
location.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275769></A><A=20
name=3D_Toc20181126>llModifyLand</A></H3>
<P class=3DMsoNormal>llModifyLand(integer action, integer size);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Modify land with action (LAND_LEVEL, LAND_RAISE,=20
LAND_LOWER)\non size (LAND_SMALL_BRUSH, LAND_MEDIUM_BRUSH,=20
LAND_LARGE_BRUSH).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275770></A><A=20
name=3D_Toc20181127>llCollisionSound</A></H3>
<P class=3DMsoNormal>llCollisionSound(string impact_sound, float=20
impact_volume);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Suppress default collision sounds, replace default =
impact=20
sounds with impact_sound (empty string to just suppress).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275771></A><A=20
name=3D_Toc20181128>llCollisionSprite</A></H3>
<P class=3DMsoNormal>llCollisionSprite(string impact_sprite);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Suppress default collision sprites, replace default =
impact=20
sprite with impact_sprite (empty string to just suppress).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc43275772></A><A=20
name=3D_Toc20181129>llGetAnimation</A></H3>
<P class=3DMsoNormal>string llGetAnimation(key id);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Get the currently playing animation for avatar =
id.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A =
name=3D_Toc20181131></A><A=20
name=3D_Toc43275773></A><A name=3D_Toc20181130>llResetScript</A></H3>
<P class=3DMsoNormal>llResetScript();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Resets the script.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275774>llMessageLinked</A></H3>
<P class=3DMsoNormal>llMessageLinked(integer linknum, integer num, =
string str, key=20
id);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sends num, str, and id to members of the link =
set(LINK_SET=20
sends to all objects, LINK_ALL_OTHERS to all other objects, =
LINK_ALL_CHILDREN to=20
all children.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275775>llPushObject</A></H3>
<P class=3DMsoNormal>llPushObject (key id, vector impulse, vector =
ang_impulse,=20
integer local);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Applies impulse and angular impulse to object =
id.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275776>llPassCollisions</A> </H3>
<P class=3DMsoNormal>llPassCollisions(integer pass);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>If pass =3D=3D TRUE, collisions are passed from =
children on to=20
parents (default is FALSE).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275777>llGetScriptName</A></H3>
<P class=3DMsoNormal>llGetScriptName();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the script name.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275778>llGetNumberOfSides</A> </H3>
<P class=3DMsoNormal>integer llGetNumberOfSides();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the number of sides.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275779>llAxisAngle2Rot</A> </H3>
<P class=3DMsoNormal>rotation llAxisAngle2Rot(vector axis, float =
angle);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the rotation generated angle about =
axis.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275780>llRot2Axis</A></H3>
<P class=3DMsoNormal>vector llRot2Axis(rotation rot);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the rotation axis represented by rot.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275781>llRot2Angle</A></H3>
<P class=3DMsoNormal>float llRot2Angle(rotation rot);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the rotation angle represented by rot.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275782>llAcos</A></H3>
<P class=3DMsoNormal>float llAcos(float val);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the arccosine in radians of val.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275783>llAsin</A></H3>
<P class=3DMsoNormal>float llAsin(float val);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the arcsine in radians of val.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275784>llAngleBetween</A></H3>
<P class=3DMsoNormal>float llAngleBetween(rotation a, rotation b);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns angle between rotation a and b.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275785>llGetInventoryKey</A></H3>
<P class=3DMsoNormal>key llGetInventoryKey(string name);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the key of the inventory name.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275786>llAllowInventoryDrop</A></H3>
<P class=3DMsoNormal>llAllowInventoryDrop(integer add);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>If add =3D=3D TRUE, users without permissions can =
still drop=20
inventory items onto object.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275787>llGetSunDirection</A></H3>
<P class=3DMsoNormal>vector llGetSunDirection();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the sun direction on the simulator.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275788>llGetTextureOffset</A></H3>
<P class=3DMsoNormal>vector llGetTextureOffset(integer side)</P>
<P class=3DMsoNormal>Returns the texture offset of side in the x and y =
components=20
of a vector.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275789>llGetTextureScale</A></H3>
<P class=3DMsoNormal>vector llGetTextureScale(integer side);</P>
<P class=3DMsoNormal>Returns the texture scale of side in the x and y =
components=20
of a vector.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275790>llGetTextureRot</A> </H3>
<P class=3DMsoNormal>float llGetTextureRot(integer side);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the texture rotation of side;</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275791>llSubStringIndex</A></H3>
<P class=3DMsoNormal>integer llSubStringIndex(string source, string =
pattern);</P>
<P class=3DMsoNormal>Finds index in source where pattern first appears =
(returns=20
length of source if not found).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275792>llGetOwnerKey</A> </H3>
<P class=3DMsoNormal>key llGetOwnerKey(key id);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Find the owner of id.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275793>llGetCenterOfMass</A></H3>
<P class=3DMsoNormal>vector llGetCenterOfMass();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Get the object's center of mass.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275794>llListSort</A> </H3>
<P class=3DMsoNormal>list llListSort(list src, integer stride, integer=20
ascending).</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sort the list into blocks of stride in ascending =
order if=20
ascending =3D=3D TRUE.&nbsp; Note that sort only works between same =
types.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275795>llGetListLength</A></H3>
<P class=3DMsoNormal>integer llGetListLength(list src);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Get the number of elements in the list.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275796>llList2Integer</A></H3>
<P class=3DMsoNormal>integer llList2Integer(list src, integer =
index);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Copy the integer at index in the list.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275797>llList2Float</A> </H3>
<P class=3DMsoNormal>float llList2Float(list src, integer index);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Copy the float at index in the list.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275798>llList2String</A> </H3>
<P class=3DMsoNormal>string llList2String(list src, integer index);</P>
<P class=3DMsoNormal>Copy the string at index in the list.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275799>llList2Key</A> </H3>
<P class=3DMsoNormal>key llList2Key(list src, integer index);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Copy the key at index in the list.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275800>llList2Vector</A></H3>
<P class=3DMsoNormal>vector llList2Vector(list src, integer index);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Copy the vector at index in the list.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275801>llList2Rot</A></H3>
<P class=3DMsoNormal>rotation llList2Rot(list src, integer index);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Copy the rotation at index in the list.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275802>llList2List</A> </H3>
<P class=3DMsoNormal>list llList2List(list src, integer start, integer =
end);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Copy the slice of the list from start to end from =
the=20
list.&nbsp; Start and end are inclusive, so 0, length =96 1 would copy =
the entire=20
list and 0,0 would capture the first list entry.&nbsp; Using negative =
numbers=20
for start and/or end causes the index to count backwards from the length =
of the=20
list, so 0,-1 would capture the entire list.&nbsp; If start is larger =
than end=20
the list returned is the exclusion of the entries, so 6,4 would give the =
entire=20
list except for the 5<SUP>th</SUP> entry.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275803>llDeleteSubList</A> </H3>
<P class=3DMsoNormal>list llDeleteSubList(list src, integer start, =
integer=20
end);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Remove the slice from the list and return the=20
remainder.&nbsp; Start and end are inclusive, so 0, length =96 1 would =
delete the=20
entire list and 0,0 would delete the first list entry.&nbsp; Using =
negative=20
numbers for start and/or end causes the index to count backwards from =
the length=20
of the list, so 0,-1 would delete the entire list.&nbsp; If start is =
larger than=20
end the list deleted is the exclusion of the entries, so 6,4 would =
delete the=20
entire list except for the 5<SUP>th</SUP> list entry.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275804>llGetListEntryType</A> </H3>
<P class=3DMsoNormal>integer llGetListEntryType(list src, integer =
index)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the type of the index entry in the=20
list\n(TYPE_INTEGER, TYPE_FLOAT, TYPE_STRING, TYPE_KEY, TYPE_VECTOR,=20
TYPE_ROTATION, or TYPE_INVALID if index is off list.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275805>llList2CSV</A></H3>
<P class=3DMsoNormal>string llList2CSV(list src);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Create a string of comma separated values from =
list.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275806>llCSV2List</A> </H3>
<P class=3DMsoNormal>list llCSV2List(string src);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Create a list from a string of comma separated =
values.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275807>llListRandomize</A> </H3>
<P class=3DMsoNormal>list llListRandomize(list src, integer stride);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns src randomized into of blocks of size =
stride.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275808>llList2ListStrided</A> </H3>
<P class=3DMsoNormal>list llList2ListStrided(list src, integer start, =
integer end,=20
integer stride);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Copy the strided slice of the list from start to =
end.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275809>llListInsertList</A></H3>
<P class=3DMsoNormal>list llListInsertList(list dest, list src, integer =
pos);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the list created by inserting src into dest =
at=20
pos.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275810>llListFindList</A></H3>
<P class=3DMsoNormal>integer llListFindList(list src, list test);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the position of the first instance of test =
in src (-1=20
if test isn=92t in src).</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275811>llGetObjectName</A></H3>
<P class=3DMsoNormal>string llGetObjectName();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the name of the object script is attached =
to.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275812>llSetObjectName</A></H3>
<P class=3DMsoNormal>llSetObjectName(string name);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Sets the objects name.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275813>llGetDate</A></H3>
<P class=3DMsoNormal>string llGetDate();</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets the date as mm/dd/yyyy.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275814>llEdgeOfWorld</A></H3>
<P class=3DMsoNormal>integer llEdgeOfWorld(vector pos, vector dir);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns TRUE if the line along dir from pos hits =
the edge of=20
the world in the current simulator and returns FALSE if that edge =
crosses into=20
another simulator.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275815>llGetAgentInfo</A></H3>
<P class=3DMsoNormal>integer llGetAgentInfo(key id);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Gets information about agent ID.&nbsp; Returns =
AGENT_FLYING,=20
AGENT_ATTACHMENTS, and/or AGENT_SCRIPTED.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275816>llKey2Name</A></H3>
<P class=3DMsoNormal>string llKey2Name(key id);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>If object id is in the simulator, return the name =
of the=20
object.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275817>llEjectFromLand</A></H3>
<P class=3DMsoNormal>llEjectFromLand(key pest)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Ejects pest from land that you own.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275818>llParseString2List</A></H3>
<P class=3DMsoNormal>list llParseString2List(string src, list =
separators, list=20
spacers)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Breaks src into a list, discarding separators, =
keeping=20
spacers (separators and spacers must be lists of strings, maximum of 8=20
each).&nbsp; So, if you had made the call:</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>&nbsp;llParseString2List(=93Parsethisnow!&nbsp; I =
dare:you=20
to.=94, [=93this=93, =93!=94, =93 =93], [=93:=94]);</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>You would get the list:</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>[=93Parse=94, =93now=94, =93I=94, =93dare=94, =
=93:=94, =93you=94, =93to=94</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275819>llOverMyLand</A></H3>
<P class=3DMsoNormal>integer llOverMyLand(key id)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns TRUE if id is over land owner of object =
owns, FALSE=20
otherwise.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275820>llGetLandOwnerAt</A></H3>
<P class=3DMsoNormal>key llGetLandOwnerAt(vector pos)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the key of the land owner, NULL_KEY if =
public.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275821>llGetNotecardLine</A></H3>
<P class=3DMsoNormal>key llGetNotecardLine(string name, integer =
line)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns line line of notecard name via the database =

event.&nbsp; If the requested line is past the end of the notecard the =
database=20
event will return the constant EOF.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275822>llGetAgentSize</A></H3>
<P class=3DMsoNormal>vector llGetAgentSize(key id)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>If the agent is in the same sim as the object, =
returns the=20
size of the avatar.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275823>llSameGroup</A></H3>
<P class=3DMsoNormal>integer llSameGroup(key id)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns TRUE if ID is in the same sim and has the =
same active=20
group, otherwise FALSE.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275824>llUnSit</A></H3>
<P class=3DMsoNormal>llUnSit(key id)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>lIf agent identified by id is sitting on the object =
the=20
script is attached to or is over land owned by the objects owner, the =
agent is=20
forced to stand up.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275825>llGroundSlope</A></H3>
<P class=3DMsoNormal>llGroundSlope(vector v)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the ground slope below the object position =
+ v.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275826>llGroundNormal</A></H3>
<P class=3DMsoNormal>llGroundNormal(vector v)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the ground normal below the object position =
+ v.</P>
<H3 style=3D"MARGIN-LEFT: 0in; TEXT-INDENT: 0in"><A=20
name=3D_Toc43275827>llGroundContour</A></H3>
<P class=3DMsoNormal>llGroundContour(vector v)</P>
<P class=3DMsoNormal>&nbsp;</P>
<P class=3DMsoNormal>Returns the ground contour below the object =
position + v.</P>
<P class=3DMsoNormal>.</P></DIV></BODY></HTML>
